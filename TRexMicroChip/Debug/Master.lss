
Master.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00800100  000016e4  00001778  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000030  0080019e  0080019e  00001816  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001816  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001848  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00001888  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012a1  00000000  00000000  00001950  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009fb  00000000  00000000  00002bf1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cec  00000000  00000000  000035ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000330  00000000  00000000  000042d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006cd  00000000  00000000  00004608  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006d1  00000000  00000000  00004cd5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000053a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	7d c2       	rjmp	.+1274   	; 0x530 <__vector_13>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e4 ee       	ldi	r30, 0xE4	; 228
      a0:	f6 e1       	ldi	r31, 0x16	; 22
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ae 39       	cpi	r26, 0x9E	; 158
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	ae e9       	ldi	r26, 0x9E	; 158
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ae 3c       	cpi	r26, 0xCE	; 206
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	57 d4       	rcall	.+2222   	; 0x972 <main>
      c4:	0c 94 70 0b 	jmp	0x16e0	; 0x16e0 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <initUSART>:
	_delay_ms(500);


	//_delay_ms(50);
	TimerOn();
}
      ca:	cf 93       	push	r28
      cc:	df 93       	push	r29
      ce:	1f 92       	push	r1
      d0:	cd b7       	in	r28, 0x3d	; 61
      d2:	de b7       	in	r29, 0x3e	; 62
      d4:	89 83       	std	Y+1, r24	; 0x01
      d6:	89 81       	ldd	r24, Y+1	; 0x01
      d8:	81 30       	cpi	r24, 0x01	; 1
      da:	e1 f0       	breq	.+56     	; 0x114 <initUSART+0x4a>
      dc:	81 ec       	ldi	r24, 0xC1	; 193
      de:	90 e0       	ldi	r25, 0x00	; 0
      e0:	21 ec       	ldi	r18, 0xC1	; 193
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	f9 01       	movw	r30, r18
      e6:	20 81       	ld	r18, Z
      e8:	28 61       	ori	r18, 0x18	; 24
      ea:	fc 01       	movw	r30, r24
      ec:	20 83       	st	Z, r18
      ee:	82 ec       	ldi	r24, 0xC2	; 194
      f0:	90 e0       	ldi	r25, 0x00	; 0
      f2:	22 ec       	ldi	r18, 0xC2	; 194
      f4:	30 e0       	ldi	r19, 0x00	; 0
      f6:	f9 01       	movw	r30, r18
      f8:	20 81       	ld	r18, Z
      fa:	26 60       	ori	r18, 0x06	; 6
      fc:	fc 01       	movw	r30, r24
      fe:	20 83       	st	Z, r18
     100:	84 ec       	ldi	r24, 0xC4	; 196
     102:	90 e0       	ldi	r25, 0x00	; 0
     104:	23 e3       	ldi	r18, 0x33	; 51
     106:	fc 01       	movw	r30, r24
     108:	20 83       	st	Z, r18
     10a:	85 ec       	ldi	r24, 0xC5	; 197
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	fc 01       	movw	r30, r24
     110:	10 82       	st	Z, r1
     112:	1b c0       	rjmp	.+54     	; 0x14a <initUSART+0x80>
     114:	89 ec       	ldi	r24, 0xC9	; 201
     116:	90 e0       	ldi	r25, 0x00	; 0
     118:	29 ec       	ldi	r18, 0xC9	; 201
     11a:	30 e0       	ldi	r19, 0x00	; 0
     11c:	f9 01       	movw	r30, r18
     11e:	20 81       	ld	r18, Z
     120:	28 61       	ori	r18, 0x18	; 24
     122:	fc 01       	movw	r30, r24
     124:	20 83       	st	Z, r18
     126:	8a ec       	ldi	r24, 0xCA	; 202
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	2a ec       	ldi	r18, 0xCA	; 202
     12c:	30 e0       	ldi	r19, 0x00	; 0
     12e:	f9 01       	movw	r30, r18
     130:	20 81       	ld	r18, Z
     132:	26 60       	ori	r18, 0x06	; 6
     134:	fc 01       	movw	r30, r24
     136:	20 83       	st	Z, r18
     138:	8c ec       	ldi	r24, 0xCC	; 204
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	23 e3       	ldi	r18, 0x33	; 51
     13e:	fc 01       	movw	r30, r24
     140:	20 83       	st	Z, r18
     142:	8d ec       	ldi	r24, 0xCD	; 205
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	fc 01       	movw	r30, r24
     148:	10 82       	st	Z, r1
     14a:	00 00       	nop
     14c:	0f 90       	pop	r0
     14e:	df 91       	pop	r29
     150:	cf 91       	pop	r28
     152:	08 95       	ret

00000154 <USART_IsSendReady>:
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
     158:	1f 92       	push	r1
     15a:	cd b7       	in	r28, 0x3d	; 61
     15c:	de b7       	in	r29, 0x3e	; 62
     15e:	89 83       	std	Y+1, r24	; 0x01
     160:	89 81       	ldd	r24, Y+1	; 0x01
     162:	81 30       	cpi	r24, 0x01	; 1
     164:	31 f0       	breq	.+12     	; 0x172 <USART_IsSendReady+0x1e>
     166:	80 ec       	ldi	r24, 0xC0	; 192
     168:	90 e0       	ldi	r25, 0x00	; 0
     16a:	fc 01       	movw	r30, r24
     16c:	80 81       	ld	r24, Z
     16e:	80 72       	andi	r24, 0x20	; 32
     170:	05 c0       	rjmp	.+10     	; 0x17c <USART_IsSendReady+0x28>
     172:	88 ec       	ldi	r24, 0xC8	; 200
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	fc 01       	movw	r30, r24
     178:	80 81       	ld	r24, Z
     17a:	80 72       	andi	r24, 0x20	; 32
     17c:	0f 90       	pop	r0
     17e:	df 91       	pop	r29
     180:	cf 91       	pop	r28
     182:	08 95       	ret

00000184 <USART_HasReceived>:
     184:	cf 93       	push	r28
     186:	df 93       	push	r29
     188:	1f 92       	push	r1
     18a:	cd b7       	in	r28, 0x3d	; 61
     18c:	de b7       	in	r29, 0x3e	; 62
     18e:	89 83       	std	Y+1, r24	; 0x01
     190:	89 81       	ldd	r24, Y+1	; 0x01
     192:	81 30       	cpi	r24, 0x01	; 1
     194:	31 f0       	breq	.+12     	; 0x1a2 <USART_HasReceived+0x1e>
     196:	80 ec       	ldi	r24, 0xC0	; 192
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	fc 01       	movw	r30, r24
     19c:	80 81       	ld	r24, Z
     19e:	80 78       	andi	r24, 0x80	; 128
     1a0:	05 c0       	rjmp	.+10     	; 0x1ac <USART_HasReceived+0x28>
     1a2:	88 ec       	ldi	r24, 0xC8	; 200
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	fc 01       	movw	r30, r24
     1a8:	80 81       	ld	r24, Z
     1aa:	80 78       	andi	r24, 0x80	; 128
     1ac:	0f 90       	pop	r0
     1ae:	df 91       	pop	r29
     1b0:	cf 91       	pop	r28
     1b2:	08 95       	ret

000001b4 <USART_Flush>:
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	1f 92       	push	r1
     1ba:	cd b7       	in	r28, 0x3d	; 61
     1bc:	de b7       	in	r29, 0x3e	; 62
     1be:	89 83       	std	Y+1, r24	; 0x01
     1c0:	89 81       	ldd	r24, Y+1	; 0x01
     1c2:	81 30       	cpi	r24, 0x01	; 1
     1c4:	a1 f0       	breq	.+40     	; 0x1ee <USART_Flush+0x3a>
     1c6:	06 c0       	rjmp	.+12     	; 0x1d4 <USART_Flush+0x20>
     1c8:	86 ec       	ldi	r24, 0xC6	; 198
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	fc 01       	movw	r30, r24
     1ce:	80 81       	ld	r24, Z
     1d0:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <dummy.1875>
     1d4:	80 ec       	ldi	r24, 0xC0	; 192
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	fc 01       	movw	r30, r24
     1da:	80 81       	ld	r24, Z
     1dc:	88 23       	and	r24, r24
     1de:	a4 f3       	brlt	.-24     	; 0x1c8 <USART_Flush+0x14>
     1e0:	0c c0       	rjmp	.+24     	; 0x1fa <USART_Flush+0x46>
     1e2:	8e ec       	ldi	r24, 0xCE	; 206
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	fc 01       	movw	r30, r24
     1e8:	80 81       	ld	r24, Z
     1ea:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <dummy.1875>
     1ee:	88 ec       	ldi	r24, 0xC8	; 200
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	fc 01       	movw	r30, r24
     1f4:	80 81       	ld	r24, Z
     1f6:	88 23       	and	r24, r24
     1f8:	a4 f3       	brlt	.-24     	; 0x1e2 <USART_Flush+0x2e>
     1fa:	00 00       	nop
     1fc:	0f 90       	pop	r0
     1fe:	df 91       	pop	r29
     200:	cf 91       	pop	r28
     202:	08 95       	ret

00000204 <USART_Send>:
     204:	cf 93       	push	r28
     206:	df 93       	push	r29
     208:	00 d0       	rcall	.+0      	; 0x20a <USART_Send+0x6>
     20a:	cd b7       	in	r28, 0x3d	; 61
     20c:	de b7       	in	r29, 0x3e	; 62
     20e:	89 83       	std	Y+1, r24	; 0x01
     210:	6a 83       	std	Y+2, r22	; 0x02
     212:	8a 81       	ldd	r24, Y+2	; 0x02
     214:	81 30       	cpi	r24, 0x01	; 1
     216:	89 f0       	breq	.+34     	; 0x23a <USART_Send+0x36>
     218:	00 00       	nop
     21a:	80 ec       	ldi	r24, 0xC0	; 192
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	fc 01       	movw	r30, r24
     220:	80 81       	ld	r24, Z
     222:	88 2f       	mov	r24, r24
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	80 72       	andi	r24, 0x20	; 32
     228:	99 27       	eor	r25, r25
     22a:	89 2b       	or	r24, r25
     22c:	b1 f3       	breq	.-20     	; 0x21a <USART_Send+0x16>
     22e:	86 ec       	ldi	r24, 0xC6	; 198
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	29 81       	ldd	r18, Y+1	; 0x01
     234:	fc 01       	movw	r30, r24
     236:	20 83       	st	Z, r18
     238:	10 c0       	rjmp	.+32     	; 0x25a <USART_Send+0x56>
     23a:	00 00       	nop
     23c:	88 ec       	ldi	r24, 0xC8	; 200
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	fc 01       	movw	r30, r24
     242:	80 81       	ld	r24, Z
     244:	88 2f       	mov	r24, r24
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	80 72       	andi	r24, 0x20	; 32
     24a:	99 27       	eor	r25, r25
     24c:	89 2b       	or	r24, r25
     24e:	b1 f3       	breq	.-20     	; 0x23c <USART_Send+0x38>
     250:	8e ec       	ldi	r24, 0xCE	; 206
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	29 81       	ldd	r18, Y+1	; 0x01
     256:	fc 01       	movw	r30, r24
     258:	20 83       	st	Z, r18
     25a:	00 00       	nop
     25c:	0f 90       	pop	r0
     25e:	0f 90       	pop	r0
     260:	df 91       	pop	r29
     262:	cf 91       	pop	r28
     264:	08 95       	ret

00000266 <USART_Receive>:
     266:	cf 93       	push	r28
     268:	df 93       	push	r29
     26a:	1f 92       	push	r1
     26c:	cd b7       	in	r28, 0x3d	; 61
     26e:	de b7       	in	r29, 0x3e	; 62
     270:	89 83       	std	Y+1, r24	; 0x01
     272:	89 81       	ldd	r24, Y+1	; 0x01
     274:	81 30       	cpi	r24, 0x01	; 1
     276:	61 f0       	breq	.+24     	; 0x290 <USART_Receive+0x2a>
     278:	00 00       	nop
     27a:	80 ec       	ldi	r24, 0xC0	; 192
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	fc 01       	movw	r30, r24
     280:	80 81       	ld	r24, Z
     282:	88 23       	and	r24, r24
     284:	d4 f7       	brge	.-12     	; 0x27a <USART_Receive+0x14>
     286:	86 ec       	ldi	r24, 0xC6	; 198
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	fc 01       	movw	r30, r24
     28c:	80 81       	ld	r24, Z
     28e:	0b c0       	rjmp	.+22     	; 0x2a6 <USART_Receive+0x40>
     290:	00 00       	nop
     292:	88 ec       	ldi	r24, 0xC8	; 200
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	fc 01       	movw	r30, r24
     298:	80 81       	ld	r24, Z
     29a:	88 23       	and	r24, r24
     29c:	d4 f7       	brge	.-12     	; 0x292 <USART_Receive+0x2c>
     29e:	8e ec       	ldi	r24, 0xCE	; 206
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	fc 01       	movw	r30, r24
     2a4:	80 81       	ld	r24, Z
     2a6:	0f 90       	pop	r0
     2a8:	df 91       	pop	r29
     2aa:	cf 91       	pop	r28
     2ac:	08 95       	ret

000002ae <USART_GetString>:
     2ae:	0f 93       	push	r16
     2b0:	1f 93       	push	r17
     2b2:	cf 93       	push	r28
     2b4:	df 93       	push	r29
     2b6:	00 d0       	rcall	.+0      	; 0x2b8 <USART_GetString+0xa>
     2b8:	00 d0       	rcall	.+0      	; 0x2ba <USART_GetString+0xc>
     2ba:	1f 92       	push	r1
     2bc:	cd b7       	in	r28, 0x3d	; 61
     2be:	de b7       	in	r29, 0x3e	; 62
     2c0:	9c 83       	std	Y+4, r25	; 0x04
     2c2:	8b 83       	std	Y+3, r24	; 0x03
     2c4:	6d 83       	std	Y+5, r22	; 0x05
     2c6:	1a 82       	std	Y+2, r1	; 0x02
     2c8:	19 82       	std	Y+1, r1	; 0x01
     2ca:	89 81       	ldd	r24, Y+1	; 0x01
     2cc:	9a 81       	ldd	r25, Y+2	; 0x02
     2ce:	2b 81       	ldd	r18, Y+3	; 0x03
     2d0:	3c 81       	ldd	r19, Y+4	; 0x04
     2d2:	89 01       	movw	r16, r18
     2d4:	08 0f       	add	r16, r24
     2d6:	19 1f       	adc	r17, r25
     2d8:	80 e0       	ldi	r24, 0x00	; 0
     2da:	c5 df       	rcall	.-118    	; 0x266 <USART_Receive>
     2dc:	f8 01       	movw	r30, r16
     2de:	80 83       	st	Z, r24
     2e0:	89 81       	ldd	r24, Y+1	; 0x01
     2e2:	9a 81       	ldd	r25, Y+2	; 0x02
     2e4:	2b 81       	ldd	r18, Y+3	; 0x03
     2e6:	3c 81       	ldd	r19, Y+4	; 0x04
     2e8:	82 0f       	add	r24, r18
     2ea:	93 1f       	adc	r25, r19
     2ec:	fc 01       	movw	r30, r24
     2ee:	80 81       	ld	r24, Z
     2f0:	8a 30       	cpi	r24, 0x0A	; 10
     2f2:	49 f4       	brne	.+18     	; 0x306 <USART_GetString+0x58>
     2f4:	89 81       	ldd	r24, Y+1	; 0x01
     2f6:	9a 81       	ldd	r25, Y+2	; 0x02
     2f8:	2b 81       	ldd	r18, Y+3	; 0x03
     2fa:	3c 81       	ldd	r19, Y+4	; 0x04
     2fc:	82 0f       	add	r24, r18
     2fe:	93 1f       	adc	r25, r19
     300:	fc 01       	movw	r30, r24
     302:	10 82       	st	Z, r1
     304:	06 c0       	rjmp	.+12     	; 0x312 <USART_GetString+0x64>
     306:	89 81       	ldd	r24, Y+1	; 0x01
     308:	9a 81       	ldd	r25, Y+2	; 0x02
     30a:	01 96       	adiw	r24, 0x01	; 1
     30c:	9a 83       	std	Y+2, r25	; 0x02
     30e:	89 83       	std	Y+1, r24	; 0x01
     310:	dc cf       	rjmp	.-72     	; 0x2ca <USART_GetString+0x1c>
     312:	89 81       	ldd	r24, Y+1	; 0x01
     314:	9a 81       	ldd	r25, Y+2	; 0x02
     316:	2b 81       	ldd	r18, Y+3	; 0x03
     318:	3c 81       	ldd	r19, Y+4	; 0x04
     31a:	82 0f       	add	r24, r18
     31c:	93 1f       	adc	r25, r19
     31e:	fc 01       	movw	r30, r24
     320:	10 82       	st	Z, r1
     322:	00 00       	nop
     324:	0f 90       	pop	r0
     326:	0f 90       	pop	r0
     328:	0f 90       	pop	r0
     32a:	0f 90       	pop	r0
     32c:	0f 90       	pop	r0
     32e:	df 91       	pop	r29
     330:	cf 91       	pop	r28
     332:	1f 91       	pop	r17
     334:	0f 91       	pop	r16
     336:	08 95       	ret

00000338 <USART_SendString>:
     338:	cf 93       	push	r28
     33a:	df 93       	push	r29
     33c:	cd b7       	in	r28, 0x3d	; 61
     33e:	de b7       	in	r29, 0x3e	; 62
     340:	28 97       	sbiw	r28, 0x08	; 8
     342:	0f b6       	in	r0, 0x3f	; 63
     344:	f8 94       	cli
     346:	de bf       	out	0x3e, r29	; 62
     348:	0f be       	out	0x3f, r0	; 63
     34a:	cd bf       	out	0x3d, r28	; 61
     34c:	9e 83       	std	Y+6, r25	; 0x06
     34e:	8d 83       	std	Y+5, r24	; 0x05
     350:	6f 83       	std	Y+7, r22	; 0x07
     352:	48 87       	std	Y+8, r20	; 0x08
     354:	88 85       	ldd	r24, Y+8	; 0x08
     356:	81 30       	cpi	r24, 0x01	; 1
     358:	09 f4       	brne	.+2      	; 0x35c <USART_SendString+0x24>
     35a:	47 c0       	rjmp	.+142    	; 0x3ea <USART_SendString+0xb2>
     35c:	1a 82       	std	Y+2, r1	; 0x02
     35e:	19 82       	std	Y+1, r1	; 0x01
     360:	28 c0       	rjmp	.+80     	; 0x3b2 <USART_SendString+0x7a>
     362:	00 00       	nop
     364:	80 ec       	ldi	r24, 0xC0	; 192
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	fc 01       	movw	r30, r24
     36a:	80 81       	ld	r24, Z
     36c:	88 2f       	mov	r24, r24
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	80 72       	andi	r24, 0x20	; 32
     372:	99 27       	eor	r25, r25
     374:	89 2b       	or	r24, r25
     376:	b1 f3       	breq	.-20     	; 0x364 <USART_SendString+0x2c>
     378:	89 81       	ldd	r24, Y+1	; 0x01
     37a:	9a 81       	ldd	r25, Y+2	; 0x02
     37c:	2d 81       	ldd	r18, Y+5	; 0x05
     37e:	3e 81       	ldd	r19, Y+6	; 0x06
     380:	82 0f       	add	r24, r18
     382:	93 1f       	adc	r25, r19
     384:	fc 01       	movw	r30, r24
     386:	80 81       	ld	r24, Z
     388:	88 2f       	mov	r24, r24
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	89 2b       	or	r24, r25
     38e:	e1 f0       	breq	.+56     	; 0x3c8 <USART_SendString+0x90>
     390:	86 ec       	ldi	r24, 0xC6	; 198
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	29 81       	ldd	r18, Y+1	; 0x01
     396:	3a 81       	ldd	r19, Y+2	; 0x02
     398:	4d 81       	ldd	r20, Y+5	; 0x05
     39a:	5e 81       	ldd	r21, Y+6	; 0x06
     39c:	24 0f       	add	r18, r20
     39e:	35 1f       	adc	r19, r21
     3a0:	f9 01       	movw	r30, r18
     3a2:	20 81       	ld	r18, Z
     3a4:	fc 01       	movw	r30, r24
     3a6:	20 83       	st	Z, r18
     3a8:	89 81       	ldd	r24, Y+1	; 0x01
     3aa:	9a 81       	ldd	r25, Y+2	; 0x02
     3ac:	01 96       	adiw	r24, 0x01	; 1
     3ae:	9a 83       	std	Y+2, r25	; 0x02
     3b0:	89 83       	std	Y+1, r24	; 0x01
     3b2:	8d 81       	ldd	r24, Y+5	; 0x05
     3b4:	9e 81       	ldd	r25, Y+6	; 0x06
     3b6:	0e 94 67 0b 	call	0x16ce	; 0x16ce <strlen>
     3ba:	9c 01       	movw	r18, r24
     3bc:	89 81       	ldd	r24, Y+1	; 0x01
     3be:	9a 81       	ldd	r25, Y+2	; 0x02
     3c0:	82 17       	cp	r24, r18
     3c2:	93 07       	cpc	r25, r19
     3c4:	70 f2       	brcs	.-100    	; 0x362 <USART_SendString+0x2a>
     3c6:	01 c0       	rjmp	.+2      	; 0x3ca <USART_SendString+0x92>
     3c8:	00 00       	nop
     3ca:	8f 81       	ldd	r24, Y+7	; 0x07
     3cc:	81 30       	cpi	r24, 0x01	; 1
     3ce:	19 f4       	brne	.+6      	; 0x3d6 <USART_SendString+0x9e>
     3d0:	60 e0       	ldi	r22, 0x00	; 0
     3d2:	8a e0       	ldi	r24, 0x0A	; 10
     3d4:	17 df       	rcall	.-466    	; 0x204 <USART_Send>
     3d6:	8f 81       	ldd	r24, Y+7	; 0x07
     3d8:	82 30       	cpi	r24, 0x02	; 2
     3da:	81 f5       	brne	.+96     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     3dc:	60 e0       	ldi	r22, 0x00	; 0
     3de:	8d e0       	ldi	r24, 0x0D	; 13
     3e0:	11 df       	rcall	.-478    	; 0x204 <USART_Send>
     3e2:	60 e0       	ldi	r22, 0x00	; 0
     3e4:	8a e0       	ldi	r24, 0x0A	; 10
     3e6:	0e df       	rcall	.-484    	; 0x204 <USART_Send>
     3e8:	29 c0       	rjmp	.+82     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     3ea:	1c 82       	std	Y+4, r1	; 0x04
     3ec:	1b 82       	std	Y+3, r1	; 0x03
     3ee:	1c c0       	rjmp	.+56     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     3f0:	00 00       	nop
     3f2:	88 ec       	ldi	r24, 0xC8	; 200
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	fc 01       	movw	r30, r24
     3f8:	80 81       	ld	r24, Z
     3fa:	88 2f       	mov	r24, r24
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	80 72       	andi	r24, 0x20	; 32
     400:	99 27       	eor	r25, r25
     402:	89 2b       	or	r24, r25
     404:	b1 f3       	breq	.-20     	; 0x3f2 <USART_SendString+0xba>
     406:	8e ec       	ldi	r24, 0xCE	; 206
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	2b 81       	ldd	r18, Y+3	; 0x03
     40c:	3c 81       	ldd	r19, Y+4	; 0x04
     40e:	4d 81       	ldd	r20, Y+5	; 0x05
     410:	5e 81       	ldd	r21, Y+6	; 0x06
     412:	24 0f       	add	r18, r20
     414:	35 1f       	adc	r19, r21
     416:	f9 01       	movw	r30, r18
     418:	20 81       	ld	r18, Z
     41a:	fc 01       	movw	r30, r24
     41c:	20 83       	st	Z, r18
     41e:	8b 81       	ldd	r24, Y+3	; 0x03
     420:	9c 81       	ldd	r25, Y+4	; 0x04
     422:	01 96       	adiw	r24, 0x01	; 1
     424:	9c 83       	std	Y+4, r25	; 0x04
     426:	8b 83       	std	Y+3, r24	; 0x03
     428:	8d 81       	ldd	r24, Y+5	; 0x05
     42a:	9e 81       	ldd	r25, Y+6	; 0x06
     42c:	0e 94 67 0b 	call	0x16ce	; 0x16ce <strlen>
     430:	9c 01       	movw	r18, r24
     432:	8b 81       	ldd	r24, Y+3	; 0x03
     434:	9c 81       	ldd	r25, Y+4	; 0x04
     436:	82 17       	cp	r24, r18
     438:	93 07       	cpc	r25, r19
     43a:	d0 f2       	brcs	.-76     	; 0x3f0 <USART_SendString+0xb8>
     43c:	00 00       	nop
     43e:	28 96       	adiw	r28, 0x08	; 8
     440:	0f b6       	in	r0, 0x3f	; 63
     442:	f8 94       	cli
     444:	de bf       	out	0x3e, r29	; 62
     446:	0f be       	out	0x3f, r0	; 63
     448:	cd bf       	out	0x3d, r28	; 61
     44a:	df 91       	pop	r29
     44c:	cf 91       	pop	r28
     44e:	08 95       	ret

00000450 <TimerSet>:
     450:	cf 93       	push	r28
     452:	df 93       	push	r29
     454:	00 d0       	rcall	.+0      	; 0x456 <TimerSet+0x6>
     456:	00 d0       	rcall	.+0      	; 0x458 <TimerSet+0x8>
     458:	cd b7       	in	r28, 0x3d	; 61
     45a:	de b7       	in	r29, 0x3e	; 62
     45c:	69 83       	std	Y+1, r22	; 0x01
     45e:	7a 83       	std	Y+2, r23	; 0x02
     460:	8b 83       	std	Y+3, r24	; 0x03
     462:	9c 83       	std	Y+4, r25	; 0x04
     464:	89 81       	ldd	r24, Y+1	; 0x01
     466:	9a 81       	ldd	r25, Y+2	; 0x02
     468:	ab 81       	ldd	r26, Y+3	; 0x03
     46a:	bc 81       	ldd	r27, Y+4	; 0x04
     46c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     470:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     474:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     478:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     47c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     480:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     484:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
     488:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
     48c:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <_avr_timer_cntcurr>
     490:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <_avr_timer_cntcurr+0x1>
     494:	a0 93 a1 01 	sts	0x01A1, r26	; 0x8001a1 <_avr_timer_cntcurr+0x2>
     498:	b0 93 a2 01 	sts	0x01A2, r27	; 0x8001a2 <_avr_timer_cntcurr+0x3>
     49c:	00 00       	nop
     49e:	0f 90       	pop	r0
     4a0:	0f 90       	pop	r0
     4a2:	0f 90       	pop	r0
     4a4:	0f 90       	pop	r0
     4a6:	df 91       	pop	r29
     4a8:	cf 91       	pop	r28
     4aa:	08 95       	ret

000004ac <TimerOn>:
     4ac:	cf 93       	push	r28
     4ae:	df 93       	push	r29
     4b0:	cd b7       	in	r28, 0x3d	; 61
     4b2:	de b7       	in	r29, 0x3e	; 62
     4b4:	81 e8       	ldi	r24, 0x81	; 129
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	2b e0       	ldi	r18, 0x0B	; 11
     4ba:	fc 01       	movw	r30, r24
     4bc:	20 83       	st	Z, r18
     4be:	88 e8       	ldi	r24, 0x88	; 136
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	2d e7       	ldi	r18, 0x7D	; 125
     4c4:	30 e0       	ldi	r19, 0x00	; 0
     4c6:	fc 01       	movw	r30, r24
     4c8:	31 83       	std	Z+1, r19	; 0x01
     4ca:	20 83       	st	Z, r18
     4cc:	8f e6       	ldi	r24, 0x6F	; 111
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	22 e0       	ldi	r18, 0x02	; 2
     4d2:	fc 01       	movw	r30, r24
     4d4:	20 83       	st	Z, r18
     4d6:	84 e8       	ldi	r24, 0x84	; 132
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	fc 01       	movw	r30, r24
     4dc:	11 82       	std	Z+1, r1	; 0x01
     4de:	10 82       	st	Z, r1
     4e0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     4e4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     4e8:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
     4ec:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
     4f0:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <_avr_timer_cntcurr>
     4f4:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <_avr_timer_cntcurr+0x1>
     4f8:	a0 93 a1 01 	sts	0x01A1, r26	; 0x8001a1 <_avr_timer_cntcurr+0x2>
     4fc:	b0 93 a2 01 	sts	0x01A2, r27	; 0x8001a2 <_avr_timer_cntcurr+0x3>
     500:	8f e5       	ldi	r24, 0x5F	; 95
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	2f e5       	ldi	r18, 0x5F	; 95
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	f9 01       	movw	r30, r18
     50a:	20 81       	ld	r18, Z
     50c:	20 68       	ori	r18, 0x80	; 128
     50e:	fc 01       	movw	r30, r24
     510:	20 83       	st	Z, r18
     512:	00 00       	nop
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	08 95       	ret

0000051a <TimerISR>:
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	cd b7       	in	r28, 0x3d	; 61
     520:	de b7       	in	r29, 0x3e	; 62
     522:	81 e0       	ldi	r24, 0x01	; 1
     524:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <__data_end>
     528:	00 00       	nop
     52a:	df 91       	pop	r29
     52c:	cf 91       	pop	r28
     52e:	08 95       	ret

00000530 <__vector_13>:
     530:	1f 92       	push	r1
     532:	0f 92       	push	r0
     534:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     538:	0f 92       	push	r0
     53a:	11 24       	eor	r1, r1
     53c:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     540:	0f 92       	push	r0
     542:	2f 93       	push	r18
     544:	3f 93       	push	r19
     546:	4f 93       	push	r20
     548:	5f 93       	push	r21
     54a:	6f 93       	push	r22
     54c:	7f 93       	push	r23
     54e:	8f 93       	push	r24
     550:	9f 93       	push	r25
     552:	af 93       	push	r26
     554:	bf 93       	push	r27
     556:	ef 93       	push	r30
     558:	ff 93       	push	r31
     55a:	cf 93       	push	r28
     55c:	df 93       	push	r29
     55e:	cd b7       	in	r28, 0x3d	; 61
     560:	de b7       	in	r29, 0x3e	; 62
     562:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <_avr_timer_cntcurr>
     566:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <_avr_timer_cntcurr+0x1>
     56a:	a0 91 a1 01 	lds	r26, 0x01A1	; 0x8001a1 <_avr_timer_cntcurr+0x2>
     56e:	b0 91 a2 01 	lds	r27, 0x01A2	; 0x8001a2 <_avr_timer_cntcurr+0x3>
     572:	01 97       	sbiw	r24, 0x01	; 1
     574:	a1 09       	sbc	r26, r1
     576:	b1 09       	sbc	r27, r1
     578:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <_avr_timer_cntcurr>
     57c:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <_avr_timer_cntcurr+0x1>
     580:	a0 93 a1 01 	sts	0x01A1, r26	; 0x8001a1 <_avr_timer_cntcurr+0x2>
     584:	b0 93 a2 01 	sts	0x01A2, r27	; 0x8001a2 <_avr_timer_cntcurr+0x3>
     588:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <_avr_timer_cntcurr>
     58c:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <_avr_timer_cntcurr+0x1>
     590:	a0 91 a1 01 	lds	r26, 0x01A1	; 0x8001a1 <_avr_timer_cntcurr+0x2>
     594:	b0 91 a2 01 	lds	r27, 0x01A2	; 0x8001a2 <_avr_timer_cntcurr+0x3>
     598:	89 2b       	or	r24, r25
     59a:	8a 2b       	or	r24, r26
     59c:	8b 2b       	or	r24, r27
     59e:	89 f4       	brne	.+34     	; 0x5c2 <__vector_13+0x92>
     5a0:	bc df       	rcall	.-136    	; 0x51a <TimerISR>
     5a2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     5a6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     5aa:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
     5ae:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
     5b2:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <_avr_timer_cntcurr>
     5b6:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <_avr_timer_cntcurr+0x1>
     5ba:	a0 93 a1 01 	sts	0x01A1, r26	; 0x8001a1 <_avr_timer_cntcurr+0x2>
     5be:	b0 93 a2 01 	sts	0x01A2, r27	; 0x8001a2 <_avr_timer_cntcurr+0x3>
     5c2:	00 00       	nop
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	ff 91       	pop	r31
     5ca:	ef 91       	pop	r30
     5cc:	bf 91       	pop	r27
     5ce:	af 91       	pop	r26
     5d0:	9f 91       	pop	r25
     5d2:	8f 91       	pop	r24
     5d4:	7f 91       	pop	r23
     5d6:	6f 91       	pop	r22
     5d8:	5f 91       	pop	r21
     5da:	4f 91       	pop	r20
     5dc:	3f 91       	pop	r19
     5de:	2f 91       	pop	r18
     5e0:	0f 90       	pop	r0
     5e2:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     5e6:	0f 90       	pop	r0
     5e8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     5ec:	0f 90       	pop	r0
     5ee:	1f 90       	pop	r1
     5f0:	18 95       	reti

000005f2 <findGCD>:
     5f2:	cf 93       	push	r28
     5f4:	df 93       	push	r29
     5f6:	cd b7       	in	r28, 0x3d	; 61
     5f8:	de b7       	in	r29, 0x3e	; 62
     5fa:	2c 97       	sbiw	r28, 0x0c	; 12
     5fc:	0f b6       	in	r0, 0x3f	; 63
     5fe:	f8 94       	cli
     600:	de bf       	out	0x3e, r29	; 62
     602:	0f be       	out	0x3f, r0	; 63
     604:	cd bf       	out	0x3d, r28	; 61
     606:	6d 83       	std	Y+5, r22	; 0x05
     608:	7e 83       	std	Y+6, r23	; 0x06
     60a:	8f 83       	std	Y+7, r24	; 0x07
     60c:	98 87       	std	Y+8, r25	; 0x08
     60e:	29 87       	std	Y+9, r18	; 0x09
     610:	3a 87       	std	Y+10, r19	; 0x0a
     612:	4b 87       	std	Y+11, r20	; 0x0b
     614:	5c 87       	std	Y+12, r21	; 0x0c
     616:	8d 81       	ldd	r24, Y+5	; 0x05
     618:	9e 81       	ldd	r25, Y+6	; 0x06
     61a:	af 81       	ldd	r26, Y+7	; 0x07
     61c:	b8 85       	ldd	r27, Y+8	; 0x08
     61e:	29 85       	ldd	r18, Y+9	; 0x09
     620:	3a 85       	ldd	r19, Y+10	; 0x0a
     622:	4b 85       	ldd	r20, Y+11	; 0x0b
     624:	5c 85       	ldd	r21, Y+12	; 0x0c
     626:	bc 01       	movw	r22, r24
     628:	cd 01       	movw	r24, r26
     62a:	0e 94 45 0b 	call	0x168a	; 0x168a <__udivmodsi4>
     62e:	dc 01       	movw	r26, r24
     630:	cb 01       	movw	r24, r22
     632:	89 83       	std	Y+1, r24	; 0x01
     634:	9a 83       	std	Y+2, r25	; 0x02
     636:	ab 83       	std	Y+3, r26	; 0x03
     638:	bc 83       	std	Y+4, r27	; 0x04
     63a:	89 81       	ldd	r24, Y+1	; 0x01
     63c:	9a 81       	ldd	r25, Y+2	; 0x02
     63e:	ab 81       	ldd	r26, Y+3	; 0x03
     640:	bc 81       	ldd	r27, Y+4	; 0x04
     642:	89 2b       	or	r24, r25
     644:	8a 2b       	or	r24, r26
     646:	8b 2b       	or	r24, r27
     648:	29 f4       	brne	.+10     	; 0x654 <findGCD+0x62>
     64a:	89 85       	ldd	r24, Y+9	; 0x09
     64c:	9a 85       	ldd	r25, Y+10	; 0x0a
     64e:	ab 85       	ldd	r26, Y+11	; 0x0b
     650:	bc 85       	ldd	r27, Y+12	; 0x0c
     652:	11 c0       	rjmp	.+34     	; 0x676 <findGCD+0x84>
     654:	89 85       	ldd	r24, Y+9	; 0x09
     656:	9a 85       	ldd	r25, Y+10	; 0x0a
     658:	ab 85       	ldd	r26, Y+11	; 0x0b
     65a:	bc 85       	ldd	r27, Y+12	; 0x0c
     65c:	8d 83       	std	Y+5, r24	; 0x05
     65e:	9e 83       	std	Y+6, r25	; 0x06
     660:	af 83       	std	Y+7, r26	; 0x07
     662:	b8 87       	std	Y+8, r27	; 0x08
     664:	89 81       	ldd	r24, Y+1	; 0x01
     666:	9a 81       	ldd	r25, Y+2	; 0x02
     668:	ab 81       	ldd	r26, Y+3	; 0x03
     66a:	bc 81       	ldd	r27, Y+4	; 0x04
     66c:	89 87       	std	Y+9, r24	; 0x09
     66e:	9a 87       	std	Y+10, r25	; 0x0a
     670:	ab 87       	std	Y+11, r26	; 0x0b
     672:	bc 87       	std	Y+12, r27	; 0x0c
     674:	d0 cf       	rjmp	.-96     	; 0x616 <findGCD+0x24>
     676:	bc 01       	movw	r22, r24
     678:	cd 01       	movw	r24, r26
     67a:	2c 96       	adiw	r28, 0x0c	; 12
     67c:	0f b6       	in	r0, 0x3f	; 63
     67e:	f8 94       	cli
     680:	de bf       	out	0x3e, r29	; 62
     682:	0f be       	out	0x3f, r0	; 63
     684:	cd bf       	out	0x3d, r28	; 61
     686:	df 91       	pop	r29
     688:	cf 91       	pop	r28
     68a:	08 95       	ret

0000068c <SMTick1>:
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	cd b7       	in	r28, 0x3d	; 61
     692:	de b7       	in	r29, 0x3e	; 62
     694:	60 97       	sbiw	r28, 0x10	; 16
     696:	0f b6       	in	r0, 0x3f	; 63
     698:	f8 94       	cli
     69a:	de bf       	out	0x3e, r29	; 62
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	cd bf       	out	0x3d, r28	; 61
     6a0:	98 8b       	std	Y+16, r25	; 0x10
     6a2:	8f 87       	std	Y+15, r24	; 0x0f
     6a4:	8f 85       	ldd	r24, Y+15	; 0x0f
     6a6:	98 89       	ldd	r25, Y+16	; 0x10
     6a8:	82 30       	cpi	r24, 0x02	; 2
     6aa:	91 05       	cpc	r25, r1
     6ac:	11 f1       	breq	.+68     	; 0x6f2 <SMTick1+0x66>
     6ae:	83 30       	cpi	r24, 0x03	; 3
     6b0:	91 05       	cpc	r25, r1
     6b2:	1c f4       	brge	.+6      	; 0x6ba <SMTick1+0x2e>
     6b4:	89 2b       	or	r24, r25
     6b6:	49 f0       	breq	.+18     	; 0x6ca <SMTick1+0x3e>
     6b8:	5b c0       	rjmp	.+182    	; 0x770 <SMTick1+0xe4>
     6ba:	83 30       	cpi	r24, 0x03	; 3
     6bc:	91 05       	cpc	r25, r1
     6be:	09 f4       	brne	.+2      	; 0x6c2 <SMTick1+0x36>
     6c0:	4d c0       	rjmp	.+154    	; 0x75c <SMTick1+0xd0>
     6c2:	04 97       	sbiw	r24, 0x04	; 4
     6c4:	09 f4       	brne	.+2      	; 0x6c8 <SMTick1+0x3c>
     6c6:	4f c0       	rjmp	.+158    	; 0x766 <SMTick1+0xda>
     6c8:	53 c0       	rjmp	.+166    	; 0x770 <SMTick1+0xe4>
     6ca:	80 e0       	ldi	r24, 0x00	; 0
     6cc:	5b dd       	rcall	.-1354   	; 0x184 <USART_HasReceived>
     6ce:	88 23       	and	r24, r24
     6d0:	31 f0       	breq	.+12     	; 0x6de <SMTick1+0x52>
     6d2:	80 e0       	ldi	r24, 0x00	; 0
     6d4:	c8 dd       	rcall	.-1136   	; 0x266 <USART_Receive>
     6d6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <Data_in>
     6da:	80 e0       	ldi	r24, 0x00	; 0
     6dc:	6b dd       	rcall	.-1322   	; 0x1b4 <USART_Flush>
     6de:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Data_in>
     6e2:	81 33       	cpi	r24, 0x31	; 49
     6e4:	09 f0       	breq	.+2      	; 0x6e8 <SMTick1+0x5c>
     6e6:	47 c0       	rjmp	.+142    	; 0x776 <SMTick1+0xea>
     6e8:	81 e0       	ldi	r24, 0x01	; 1
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	98 8b       	std	Y+16, r25	; 0x10
     6ee:	8f 87       	std	Y+15, r24	; 0x0f
     6f0:	42 c0       	rjmp	.+132    	; 0x776 <SMTick1+0xea>
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	47 dd       	rcall	.-1394   	; 0x184 <USART_HasReceived>
     6f6:	88 23       	and	r24, r24
     6f8:	31 f0       	breq	.+12     	; 0x706 <SMTick1+0x7a>
     6fa:	80 e0       	ldi	r24, 0x00	; 0
     6fc:	b4 dd       	rcall	.-1176   	; 0x266 <USART_Receive>
     6fe:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <Data_in>
     702:	80 e0       	ldi	r24, 0x00	; 0
     704:	57 dd       	rcall	.-1362   	; 0x1b4 <USART_Flush>
     706:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Data_in>
     70a:	82 33       	cpi	r24, 0x32	; 50
     70c:	39 f4       	brne	.+14     	; 0x71c <SMTick1+0x90>
     70e:	85 e2       	ldi	r24, 0x25	; 37
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	fc 01       	movw	r30, r24
     714:	10 82       	st	Z, r1
     716:	18 8a       	std	Y+16, r1	; 0x10
     718:	1f 86       	std	Y+15, r1	; 0x0f
     71a:	2e c0       	rjmp	.+92     	; 0x778 <SMTick1+0xec>
     71c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Data_in>
     720:	83 33       	cpi	r24, 0x33	; 51
     722:	29 f4       	brne	.+10     	; 0x72e <SMTick1+0xa2>
     724:	81 e0       	ldi	r24, 0x01	; 1
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	98 8b       	std	Y+16, r25	; 0x10
     72a:	8f 87       	std	Y+15, r24	; 0x0f
     72c:	25 c0       	rjmp	.+74     	; 0x778 <SMTick1+0xec>
     72e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Data_in>
     732:	84 33       	cpi	r24, 0x34	; 52
     734:	29 f4       	brne	.+10     	; 0x740 <SMTick1+0xb4>
     736:	83 e0       	ldi	r24, 0x03	; 3
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	98 8b       	std	Y+16, r25	; 0x10
     73c:	8f 87       	std	Y+15, r24	; 0x0f
     73e:	1c c0       	rjmp	.+56     	; 0x778 <SMTick1+0xec>
     740:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Data_in>
     744:	85 33       	cpi	r24, 0x35	; 53
     746:	29 f4       	brne	.+10     	; 0x752 <SMTick1+0xc6>
     748:	84 e0       	ldi	r24, 0x04	; 4
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	98 8b       	std	Y+16, r25	; 0x10
     74e:	8f 87       	std	Y+15, r24	; 0x0f
     750:	13 c0       	rjmp	.+38     	; 0x778 <SMTick1+0xec>
     752:	82 e0       	ldi	r24, 0x02	; 2
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	98 8b       	std	Y+16, r25	; 0x10
     758:	8f 87       	std	Y+15, r24	; 0x0f
     75a:	0e c0       	rjmp	.+28     	; 0x778 <SMTick1+0xec>
     75c:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <Data_in>
     760:	18 8a       	std	Y+16, r1	; 0x10
     762:	1f 86       	std	Y+15, r1	; 0x0f
     764:	09 c0       	rjmp	.+18     	; 0x778 <SMTick1+0xec>
     766:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <Data_in>
     76a:	18 8a       	std	Y+16, r1	; 0x10
     76c:	1f 86       	std	Y+15, r1	; 0x0f
     76e:	04 c0       	rjmp	.+8      	; 0x778 <SMTick1+0xec>
     770:	18 8a       	std	Y+16, r1	; 0x10
     772:	1f 86       	std	Y+15, r1	; 0x0f
     774:	01 c0       	rjmp	.+2      	; 0x778 <SMTick1+0xec>
     776:	00 00       	nop
     778:	8f 85       	ldd	r24, Y+15	; 0x0f
     77a:	98 89       	ldd	r25, Y+16	; 0x10
     77c:	82 30       	cpi	r24, 0x02	; 2
     77e:	91 05       	cpc	r25, r1
     780:	79 f1       	breq	.+94     	; 0x7e0 <SMTick1+0x154>
     782:	83 30       	cpi	r24, 0x03	; 3
     784:	91 05       	cpc	r25, r1
     786:	34 f4       	brge	.+12     	; 0x794 <SMTick1+0x108>
     788:	00 97       	sbiw	r24, 0x00	; 0
     78a:	09 f4       	brne	.+2      	; 0x78e <SMTick1+0x102>
     78c:	e4 c0       	rjmp	.+456    	; 0x956 <SMTick1+0x2ca>
     78e:	01 97       	sbiw	r24, 0x01	; 1
     790:	49 f0       	breq	.+18     	; 0x7a4 <SMTick1+0x118>
     792:	de c0       	rjmp	.+444    	; 0x950 <SMTick1+0x2c4>
     794:	83 30       	cpi	r24, 0x03	; 3
     796:	91 05       	cpc	r25, r1
     798:	09 f4       	brne	.+2      	; 0x79c <SMTick1+0x110>
     79a:	c0 c0       	rjmp	.+384    	; 0x91c <SMTick1+0x290>
     79c:	04 97       	sbiw	r24, 0x04	; 4
     79e:	09 f4       	brne	.+2      	; 0x7a2 <SMTick1+0x116>
     7a0:	ca c0       	rjmp	.+404    	; 0x936 <SMTick1+0x2aa>
     7a2:	d6 c0       	rjmp	.+428    	; 0x950 <SMTick1+0x2c4>
     7a4:	80 e0       	ldi	r24, 0x00	; 0
     7a6:	d6 dc       	rcall	.-1620   	; 0x154 <USART_IsSendReady>
     7a8:	88 23       	and	r24, r24
     7aa:	51 f0       	breq	.+20     	; 0x7c0 <SMTick1+0x134>
     7ac:	40 e0       	ldi	r20, 0x00	; 0
     7ae:	61 e0       	ldi	r22, 0x01	; 1
     7b0:	8a e5       	ldi	r24, 0x5A	; 90
     7b2:	91 e0       	ldi	r25, 0x01	; 1
     7b4:	c1 dd       	rcall	.-1150   	; 0x338 <USART_SendString>
     7b6:	85 e2       	ldi	r24, 0x25	; 37
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	21 e0       	ldi	r18, 0x01	; 1
     7bc:	fc 01       	movw	r30, r24
     7be:	20 83       	st	Z, r18
     7c0:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <Data_in>
     7c4:	50 d3       	rcall	.+1696   	; 0xe66 <get_dist>
     7c6:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <Distance>
     7ca:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <Distance+0x1>
     7ce:	90 93 a6 01 	sts	0x01A6, r25	; 0x8001a6 <def_dist+0x1>
     7d2:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <def_dist>
     7d6:	82 e0       	ldi	r24, 0x02	; 2
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	98 8b       	std	Y+16, r25	; 0x10
     7dc:	8f 87       	std	Y+15, r24	; 0x0f
     7de:	be c0       	rjmp	.+380    	; 0x95c <SMTick1+0x2d0>
     7e0:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <Data_in>
     7e4:	40 d3       	rcall	.+1664   	; 0xe66 <get_dist>
     7e6:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <def_dist>
     7ea:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <def_dist+0x1>
     7ee:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <dist_diff>
     7f2:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <dist_diff+0x1>
     7f6:	a9 01       	movw	r20, r18
     7f8:	48 1b       	sub	r20, r24
     7fa:	59 0b       	sbc	r21, r25
     7fc:	ca 01       	movw	r24, r20
     7fe:	9c 01       	movw	r18, r24
     800:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <Distance>
     804:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <Distance+0x1>
     808:	82 17       	cp	r24, r18
     80a:	93 07       	cpc	r25, r19
     80c:	98 f0       	brcs	.+38     	; 0x834 <SMTick1+0x1a8>
     80e:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <def_dist>
     812:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <def_dist+0x1>
     816:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <dist_diff>
     81a:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <dist_diff+0x1>
     81e:	82 0f       	add	r24, r18
     820:	93 1f       	adc	r25, r19
     822:	9c 01       	movw	r18, r24
     824:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <Distance>
     828:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <Distance+0x1>
     82c:	28 17       	cp	r18, r24
     82e:	39 07       	cpc	r19, r25
     830:	08 f0       	brcs	.+2      	; 0x834 <SMTick1+0x1a8>
     832:	93 c0       	rjmp	.+294    	; 0x95a <SMTick1+0x2ce>
     834:	40 e0       	ldi	r20, 0x00	; 0
     836:	61 e0       	ldi	r22, 0x01	; 1
     838:	83 e6       	ldi	r24, 0x63	; 99
     83a:	91 e0       	ldi	r25, 0x01	; 1
     83c:	7d dd       	rcall	.-1286   	; 0x338 <USART_SendString>
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	aa ef       	ldi	r26, 0xFA	; 250
     844:	b3 e4       	ldi	r27, 0x43	; 67
     846:	89 83       	std	Y+1, r24	; 0x01
     848:	9a 83       	std	Y+2, r25	; 0x02
     84a:	ab 83       	std	Y+3, r26	; 0x03
     84c:	bc 83       	std	Y+4, r27	; 0x04
     84e:	20 e0       	ldi	r18, 0x00	; 0
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	4a e7       	ldi	r20, 0x7A	; 122
     854:	53 e4       	ldi	r21, 0x43	; 67
     856:	69 81       	ldd	r22, Y+1	; 0x01
     858:	7a 81       	ldd	r23, Y+2	; 0x02
     85a:	8b 81       	ldd	r24, Y+3	; 0x03
     85c:	9c 81       	ldd	r25, Y+4	; 0x04
     85e:	b2 d6       	rcall	.+3428   	; 0x15c4 <__mulsf3>
     860:	dc 01       	movw	r26, r24
     862:	cb 01       	movw	r24, r22
     864:	8d 83       	std	Y+5, r24	; 0x05
     866:	9e 83       	std	Y+6, r25	; 0x06
     868:	af 83       	std	Y+7, r26	; 0x07
     86a:	b8 87       	std	Y+8, r27	; 0x08
     86c:	20 e0       	ldi	r18, 0x00	; 0
     86e:	30 e0       	ldi	r19, 0x00	; 0
     870:	40 e8       	ldi	r20, 0x80	; 128
     872:	5f e3       	ldi	r21, 0x3F	; 63
     874:	6d 81       	ldd	r22, Y+5	; 0x05
     876:	7e 81       	ldd	r23, Y+6	; 0x06
     878:	8f 81       	ldd	r24, Y+7	; 0x07
     87a:	98 85       	ldd	r25, Y+8	; 0x08
     87c:	55 d5       	rcall	.+2730   	; 0x1328 <__cmpsf2>
     87e:	88 23       	and	r24, r24
     880:	2c f4       	brge	.+10     	; 0x88c <SMTick1+0x200>
     882:	81 e0       	ldi	r24, 0x01	; 1
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	9a 87       	std	Y+10, r25	; 0x0a
     888:	89 87       	std	Y+9, r24	; 0x09
     88a:	3b c0       	rjmp	.+118    	; 0x902 <SMTick1+0x276>
     88c:	20 e0       	ldi	r18, 0x00	; 0
     88e:	3f ef       	ldi	r19, 0xFF	; 255
     890:	4f e7       	ldi	r20, 0x7F	; 127
     892:	57 e4       	ldi	r21, 0x47	; 71
     894:	6d 81       	ldd	r22, Y+5	; 0x05
     896:	7e 81       	ldd	r23, Y+6	; 0x06
     898:	8f 81       	ldd	r24, Y+7	; 0x07
     89a:	98 85       	ldd	r25, Y+8	; 0x08
     89c:	8f d6       	rcall	.+3358   	; 0x15bc <__gesf2>
     89e:	18 16       	cp	r1, r24
     8a0:	3c f5       	brge	.+78     	; 0x8f0 <SMTick1+0x264>
     8a2:	20 e0       	ldi	r18, 0x00	; 0
     8a4:	30 e0       	ldi	r19, 0x00	; 0
     8a6:	40 e2       	ldi	r20, 0x20	; 32
     8a8:	51 e4       	ldi	r21, 0x41	; 65
     8aa:	69 81       	ldd	r22, Y+1	; 0x01
     8ac:	7a 81       	ldd	r23, Y+2	; 0x02
     8ae:	8b 81       	ldd	r24, Y+3	; 0x03
     8b0:	9c 81       	ldd	r25, Y+4	; 0x04
     8b2:	88 d6       	rcall	.+3344   	; 0x15c4 <__mulsf3>
     8b4:	dc 01       	movw	r26, r24
     8b6:	cb 01       	movw	r24, r22
     8b8:	bc 01       	movw	r22, r24
     8ba:	cd 01       	movw	r24, r26
     8bc:	a1 d5       	rcall	.+2882   	; 0x1400 <__fixunssfsi>
     8be:	dc 01       	movw	r26, r24
     8c0:	cb 01       	movw	r24, r22
     8c2:	9a 87       	std	Y+10, r25	; 0x0a
     8c4:	89 87       	std	Y+9, r24	; 0x09
     8c6:	0f c0       	rjmp	.+30     	; 0x8e6 <SMTick1+0x25a>
     8c8:	89 e1       	ldi	r24, 0x19	; 25
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	9c 87       	std	Y+12, r25	; 0x0c
     8ce:	8b 87       	std	Y+11, r24	; 0x0b
     8d0:	8b 85       	ldd	r24, Y+11	; 0x0b
     8d2:	9c 85       	ldd	r25, Y+12	; 0x0c
     8d4:	01 97       	sbiw	r24, 0x01	; 1
     8d6:	f1 f7       	brne	.-4      	; 0x8d4 <SMTick1+0x248>
     8d8:	9c 87       	std	Y+12, r25	; 0x0c
     8da:	8b 87       	std	Y+11, r24	; 0x0b
     8dc:	89 85       	ldd	r24, Y+9	; 0x09
     8de:	9a 85       	ldd	r25, Y+10	; 0x0a
     8e0:	01 97       	sbiw	r24, 0x01	; 1
     8e2:	9a 87       	std	Y+10, r25	; 0x0a
     8e4:	89 87       	std	Y+9, r24	; 0x09
     8e6:	89 85       	ldd	r24, Y+9	; 0x09
     8e8:	9a 85       	ldd	r25, Y+10	; 0x0a
     8ea:	89 2b       	or	r24, r25
     8ec:	69 f7       	brne	.-38     	; 0x8c8 <SMTick1+0x23c>
     8ee:	13 c0       	rjmp	.+38     	; 0x916 <SMTick1+0x28a>
     8f0:	6d 81       	ldd	r22, Y+5	; 0x05
     8f2:	7e 81       	ldd	r23, Y+6	; 0x06
     8f4:	8f 81       	ldd	r24, Y+7	; 0x07
     8f6:	98 85       	ldd	r25, Y+8	; 0x08
     8f8:	83 d5       	rcall	.+2822   	; 0x1400 <__fixunssfsi>
     8fa:	dc 01       	movw	r26, r24
     8fc:	cb 01       	movw	r24, r22
     8fe:	9a 87       	std	Y+10, r25	; 0x0a
     900:	89 87       	std	Y+9, r24	; 0x09
     902:	89 85       	ldd	r24, Y+9	; 0x09
     904:	9a 85       	ldd	r25, Y+10	; 0x0a
     906:	9e 87       	std	Y+14, r25	; 0x0e
     908:	8d 87       	std	Y+13, r24	; 0x0d
     90a:	8d 85       	ldd	r24, Y+13	; 0x0d
     90c:	9e 85       	ldd	r25, Y+14	; 0x0e
     90e:	01 97       	sbiw	r24, 0x01	; 1
     910:	f1 f7       	brne	.-4      	; 0x90e <SMTick1+0x282>
     912:	9e 87       	std	Y+14, r25	; 0x0e
     914:	8d 87       	std	Y+13, r24	; 0x0d
     916:	18 8a       	std	Y+16, r1	; 0x10
     918:	1f 86       	std	Y+15, r1	; 0x0f
     91a:	1f c0       	rjmp	.+62     	; 0x95a <SMTick1+0x2ce>
     91c:	40 e0       	ldi	r20, 0x00	; 0
     91e:	61 e0       	ldi	r22, 0x01	; 1
     920:	89 e6       	ldi	r24, 0x69	; 105
     922:	91 e0       	ldi	r25, 0x01	; 1
     924:	09 dd       	rcall	.-1518   	; 0x338 <USART_SendString>
     926:	60 e0       	ldi	r22, 0x00	; 0
     928:	87 e0       	ldi	r24, 0x07	; 7
     92a:	91 e0       	ldi	r25, 0x01	; 1
     92c:	c0 dc       	rcall	.-1664   	; 0x2ae <USART_GetString>
     92e:	87 e0       	ldi	r24, 0x07	; 7
     930:	91 e0       	ldi	r25, 0x01	; 1
     932:	ee d2       	rcall	.+1500   	; 0xf10 <BT_rename>
     934:	13 c0       	rjmp	.+38     	; 0x95c <SMTick1+0x2d0>
     936:	40 e0       	ldi	r20, 0x00	; 0
     938:	61 e0       	ldi	r22, 0x01	; 1
     93a:	88 e7       	ldi	r24, 0x78	; 120
     93c:	91 e0       	ldi	r25, 0x01	; 1
     93e:	fc dc       	rcall	.-1544   	; 0x338 <USART_SendString>
     940:	60 e0       	ldi	r22, 0x00	; 0
     942:	85 e2       	ldi	r24, 0x25	; 37
     944:	91 e0       	ldi	r25, 0x01	; 1
     946:	b3 dc       	rcall	.-1690   	; 0x2ae <USART_GetString>
     948:	85 e2       	ldi	r24, 0x25	; 37
     94a:	91 e0       	ldi	r25, 0x01	; 1
     94c:	e6 d3       	rcall	.+1996   	; 0x111a <BT_changePin>
     94e:	06 c0       	rjmp	.+12     	; 0x95c <SMTick1+0x2d0>
     950:	18 8a       	std	Y+16, r1	; 0x10
     952:	1f 86       	std	Y+15, r1	; 0x0f
     954:	03 c0       	rjmp	.+6      	; 0x95c <SMTick1+0x2d0>
     956:	00 00       	nop
     958:	01 c0       	rjmp	.+2      	; 0x95c <SMTick1+0x2d0>
     95a:	00 00       	nop
     95c:	8f 85       	ldd	r24, Y+15	; 0x0f
     95e:	98 89       	ldd	r25, Y+16	; 0x10
     960:	60 96       	adiw	r28, 0x10	; 16
     962:	0f b6       	in	r0, 0x3f	; 63
     964:	f8 94       	cli
     966:	de bf       	out	0x3e, r29	; 62
     968:	0f be       	out	0x3f, r0	; 63
     96a:	cd bf       	out	0x3d, r28	; 61
     96c:	df 91       	pop	r29
     96e:	cf 91       	pop	r28
     970:	08 95       	ret

00000972 <main>:
     972:	0f 93       	push	r16
     974:	1f 93       	push	r17
     976:	cf 93       	push	r28
     978:	df 93       	push	r29
     97a:	cd b7       	in	r28, 0x3d	; 61
     97c:	de b7       	in	r29, 0x3e	; 62
     97e:	a6 97       	sbiw	r28, 0x26	; 38
     980:	0f b6       	in	r0, 0x3f	; 63
     982:	f8 94       	cli
     984:	de bf       	out	0x3e, r29	; 62
     986:	0f be       	out	0x3f, r0	; 63
     988:	cd bf       	out	0x3d, r28	; 61
     98a:	84 e2       	ldi	r24, 0x24	; 36
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	2f ef       	ldi	r18, 0xFF	; 255
     990:	fc 01       	movw	r30, r24
     992:	20 83       	st	Z, r18
     994:	85 e2       	ldi	r24, 0x25	; 37
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	fc 01       	movw	r30, r24
     99a:	10 82       	st	Z, r1
     99c:	81 e2       	ldi	r24, 0x21	; 33
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	21 e2       	ldi	r18, 0x21	; 33
     9a2:	30 e0       	ldi	r19, 0x00	; 0
     9a4:	f9 01       	movw	r30, r18
     9a6:	20 81       	ld	r18, Z
     9a8:	22 60       	ori	r18, 0x02	; 2
     9aa:	fc 01       	movw	r30, r24
     9ac:	20 83       	st	Z, r18
     9ae:	81 e2       	ldi	r24, 0x21	; 33
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	21 e2       	ldi	r18, 0x21	; 33
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	f9 01       	movw	r30, r18
     9b8:	20 81       	ld	r18, Z
     9ba:	2e 7f       	andi	r18, 0xFE	; 254
     9bc:	fc 01       	movw	r30, r24
     9be:	20 83       	st	Z, r18
     9c0:	82 e3       	ldi	r24, 0x32	; 50
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	a0 e0       	ldi	r26, 0x00	; 0
     9c6:	b0 e0       	ldi	r27, 0x00	; 0
     9c8:	8b 83       	std	Y+3, r24	; 0x03
     9ca:	9c 83       	std	Y+4, r25	; 0x04
     9cc:	ad 83       	std	Y+5, r26	; 0x05
     9ce:	be 83       	std	Y+6, r27	; 0x06
     9d0:	86 e9       	ldi	r24, 0x96	; 150
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	a0 e0       	ldi	r26, 0x00	; 0
     9d6:	b0 e0       	ldi	r27, 0x00	; 0
     9d8:	8f 83       	std	Y+7, r24	; 0x07
     9da:	98 87       	std	Y+8, r25	; 0x08
     9dc:	a9 87       	std	Y+9, r26	; 0x09
     9de:	ba 87       	std	Y+10, r27	; 0x0a
     9e0:	86 e9       	ldi	r24, 0x96	; 150
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	a0 e0       	ldi	r26, 0x00	; 0
     9e6:	b0 e0       	ldi	r27, 0x00	; 0
     9e8:	8b 87       	std	Y+11, r24	; 0x0b
     9ea:	9c 87       	std	Y+12, r25	; 0x0c
     9ec:	ad 87       	std	Y+13, r26	; 0x0d
     9ee:	be 87       	std	Y+14, r27	; 0x0e
     9f0:	81 e0       	ldi	r24, 0x01	; 1
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	a0 e0       	ldi	r26, 0x00	; 0
     9f6:	b0 e0       	ldi	r27, 0x00	; 0
     9f8:	8f 87       	std	Y+15, r24	; 0x0f
     9fa:	98 8b       	std	Y+16, r25	; 0x10
     9fc:	a9 8b       	std	Y+17, r26	; 0x11
     9fe:	ba 8b       	std	Y+18, r27	; 0x12
     a00:	2b 81       	ldd	r18, Y+3	; 0x03
     a02:	3c 81       	ldd	r19, Y+4	; 0x04
     a04:	4d 81       	ldd	r20, Y+5	; 0x05
     a06:	5e 81       	ldd	r21, Y+6	; 0x06
     a08:	8b 81       	ldd	r24, Y+3	; 0x03
     a0a:	9c 81       	ldd	r25, Y+4	; 0x04
     a0c:	ad 81       	ldd	r26, Y+5	; 0x05
     a0e:	be 81       	ldd	r27, Y+6	; 0x06
     a10:	bc 01       	movw	r22, r24
     a12:	cd 01       	movw	r24, r26
     a14:	ee dd       	rcall	.-1060   	; 0x5f2 <findGCD>
     a16:	dc 01       	movw	r26, r24
     a18:	cb 01       	movw	r24, r22
     a1a:	8f 87       	std	Y+15, r24	; 0x0f
     a1c:	98 8b       	std	Y+16, r25	; 0x10
     a1e:	a9 8b       	std	Y+17, r26	; 0x11
     a20:	ba 8b       	std	Y+18, r27	; 0x12
     a22:	8f 85       	ldd	r24, Y+15	; 0x0f
     a24:	98 89       	ldd	r25, Y+16	; 0x10
     a26:	a9 89       	ldd	r26, Y+17	; 0x11
     a28:	ba 89       	ldd	r27, Y+18	; 0x12
     a2a:	8b 8b       	std	Y+19, r24	; 0x13
     a2c:	9c 8b       	std	Y+20, r25	; 0x14
     a2e:	ad 8b       	std	Y+21, r26	; 0x15
     a30:	be 8b       	std	Y+22, r27	; 0x16
     a32:	8b 81       	ldd	r24, Y+3	; 0x03
     a34:	9c 81       	ldd	r25, Y+4	; 0x04
     a36:	ad 81       	ldd	r26, Y+5	; 0x05
     a38:	be 81       	ldd	r27, Y+6	; 0x06
     a3a:	2b 89       	ldd	r18, Y+19	; 0x13
     a3c:	3c 89       	ldd	r19, Y+20	; 0x14
     a3e:	4d 89       	ldd	r20, Y+21	; 0x15
     a40:	5e 89       	ldd	r21, Y+22	; 0x16
     a42:	bc 01       	movw	r22, r24
     a44:	cd 01       	movw	r24, r26
     a46:	21 d6       	rcall	.+3138   	; 0x168a <__udivmodsi4>
     a48:	da 01       	movw	r26, r20
     a4a:	c9 01       	movw	r24, r18
     a4c:	8f 8b       	std	Y+23, r24	; 0x17
     a4e:	98 8f       	std	Y+24, r25	; 0x18
     a50:	a9 8f       	std	Y+25, r26	; 0x19
     a52:	ba 8f       	std	Y+26, r27	; 0x1a
     a54:	8f 81       	ldd	r24, Y+7	; 0x07
     a56:	98 85       	ldd	r25, Y+8	; 0x08
     a58:	a9 85       	ldd	r26, Y+9	; 0x09
     a5a:	ba 85       	ldd	r27, Y+10	; 0x0a
     a5c:	2b 89       	ldd	r18, Y+19	; 0x13
     a5e:	3c 89       	ldd	r19, Y+20	; 0x14
     a60:	4d 89       	ldd	r20, Y+21	; 0x15
     a62:	5e 89       	ldd	r21, Y+22	; 0x16
     a64:	bc 01       	movw	r22, r24
     a66:	cd 01       	movw	r24, r26
     a68:	10 d6       	rcall	.+3104   	; 0x168a <__udivmodsi4>
     a6a:	da 01       	movw	r26, r20
     a6c:	c9 01       	movw	r24, r18
     a6e:	8b 8f       	std	Y+27, r24	; 0x1b
     a70:	9c 8f       	std	Y+28, r25	; 0x1c
     a72:	ad 8f       	std	Y+29, r26	; 0x1d
     a74:	be 8f       	std	Y+30, r27	; 0x1e
     a76:	8b 85       	ldd	r24, Y+11	; 0x0b
     a78:	9c 85       	ldd	r25, Y+12	; 0x0c
     a7a:	ad 85       	ldd	r26, Y+13	; 0x0d
     a7c:	be 85       	ldd	r27, Y+14	; 0x0e
     a7e:	2b 89       	ldd	r18, Y+19	; 0x13
     a80:	3c 89       	ldd	r19, Y+20	; 0x14
     a82:	4d 89       	ldd	r20, Y+21	; 0x15
     a84:	5e 89       	ldd	r21, Y+22	; 0x16
     a86:	bc 01       	movw	r22, r24
     a88:	cd 01       	movw	r24, r26
     a8a:	ff d5       	rcall	.+3070   	; 0x168a <__udivmodsi4>
     a8c:	da 01       	movw	r26, r20
     a8e:	c9 01       	movw	r24, r18
     a90:	8f 8f       	std	Y+31, r24	; 0x1f
     a92:	98 a3       	std	Y+32, r25	; 0x20
     a94:	a9 a3       	std	Y+33, r26	; 0x21
     a96:	ba a3       	std	Y+34, r27	; 0x22
     a98:	88 ea       	ldi	r24, 0xA8	; 168
     a9a:	91 e0       	ldi	r25, 0x01	; 1
     a9c:	9e a3       	std	Y+38, r25	; 0x26
     a9e:	8d a3       	std	Y+37, r24	; 0x25
     aa0:	81 e0       	ldi	r24, 0x01	; 1
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	9c a3       	std	Y+36, r25	; 0x24
     aa6:	8b a3       	std	Y+35, r24	; 0x23
     aa8:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <task1.2009>
     aac:	8f 89       	ldd	r24, Y+23	; 0x17
     aae:	98 8d       	ldd	r25, Y+24	; 0x18
     ab0:	a9 8d       	ldd	r26, Y+25	; 0x19
     ab2:	ba 8d       	ldd	r27, Y+26	; 0x1a
     ab4:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <task1.2009+0x1>
     ab8:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <task1.2009+0x2>
     abc:	a0 93 ab 01 	sts	0x01AB, r26	; 0x8001ab <task1.2009+0x3>
     ac0:	b0 93 ac 01 	sts	0x01AC, r27	; 0x8001ac <task1.2009+0x4>
     ac4:	8f 89       	ldd	r24, Y+23	; 0x17
     ac6:	98 8d       	ldd	r25, Y+24	; 0x18
     ac8:	a9 8d       	ldd	r26, Y+25	; 0x19
     aca:	ba 8d       	ldd	r27, Y+26	; 0x1a
     acc:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <task1.2009+0x5>
     ad0:	90 93 ae 01 	sts	0x01AE, r25	; 0x8001ae <task1.2009+0x6>
     ad4:	a0 93 af 01 	sts	0x01AF, r26	; 0x8001af <task1.2009+0x7>
     ad8:	b0 93 b0 01 	sts	0x01B0, r27	; 0x8001b0 <task1.2009+0x8>
     adc:	86 e4       	ldi	r24, 0x46	; 70
     ade:	93 e0       	ldi	r25, 0x03	; 3
     ae0:	90 93 b2 01 	sts	0x01B2, r25	; 0x8001b2 <task1.2009+0xa>
     ae4:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <task1.2009+0x9>
     ae8:	8b 89       	ldd	r24, Y+19	; 0x13
     aea:	9c 89       	ldd	r25, Y+20	; 0x14
     aec:	ad 89       	ldd	r26, Y+21	; 0x15
     aee:	be 89       	ldd	r27, Y+22	; 0x16
     af0:	bc 01       	movw	r22, r24
     af2:	cd 01       	movw	r24, r26
     af4:	ad dc       	rcall	.-1702   	; 0x450 <TimerSet>
     af6:	da dc       	rcall	.-1612   	; 0x4ac <TimerOn>
     af8:	80 e0       	ldi	r24, 0x00	; 0
     afa:	e7 da       	rcall	.-2610   	; 0xca <initUSART>
     afc:	1a 82       	std	Y+2, r1	; 0x02
     afe:	19 82       	std	Y+1, r1	; 0x01
     b00:	9b c0       	rjmp	.+310    	; 0xc38 <main+0x2c6>
     b02:	89 81       	ldd	r24, Y+1	; 0x01
     b04:	9a 81       	ldd	r25, Y+2	; 0x02
     b06:	88 0f       	add	r24, r24
     b08:	99 1f       	adc	r25, r25
     b0a:	9e 01       	movw	r18, r28
     b0c:	2f 5f       	subi	r18, 0xFF	; 255
     b0e:	3f 4f       	sbci	r19, 0xFF	; 255
     b10:	82 0f       	add	r24, r18
     b12:	93 1f       	adc	r25, r19
     b14:	84 96       	adiw	r24, 0x24	; 36
     b16:	fc 01       	movw	r30, r24
     b18:	80 81       	ld	r24, Z
     b1a:	91 81       	ldd	r25, Z+1	; 0x01
     b1c:	fc 01       	movw	r30, r24
     b1e:	25 81       	ldd	r18, Z+5	; 0x05
     b20:	36 81       	ldd	r19, Z+6	; 0x06
     b22:	47 81       	ldd	r20, Z+7	; 0x07
     b24:	50 85       	ldd	r21, Z+8	; 0x08
     b26:	89 81       	ldd	r24, Y+1	; 0x01
     b28:	9a 81       	ldd	r25, Y+2	; 0x02
     b2a:	88 0f       	add	r24, r24
     b2c:	99 1f       	adc	r25, r25
     b2e:	be 01       	movw	r22, r28
     b30:	6f 5f       	subi	r22, 0xFF	; 255
     b32:	7f 4f       	sbci	r23, 0xFF	; 255
     b34:	86 0f       	add	r24, r22
     b36:	97 1f       	adc	r25, r23
     b38:	84 96       	adiw	r24, 0x24	; 36
     b3a:	fc 01       	movw	r30, r24
     b3c:	80 81       	ld	r24, Z
     b3e:	91 81       	ldd	r25, Z+1	; 0x01
     b40:	fc 01       	movw	r30, r24
     b42:	81 81       	ldd	r24, Z+1	; 0x01
     b44:	92 81       	ldd	r25, Z+2	; 0x02
     b46:	a3 81       	ldd	r26, Z+3	; 0x03
     b48:	b4 81       	ldd	r27, Z+4	; 0x04
     b4a:	28 17       	cp	r18, r24
     b4c:	39 07       	cpc	r19, r25
     b4e:	4a 07       	cpc	r20, r26
     b50:	5b 07       	cpc	r21, r27
     b52:	09 f0       	breq	.+2      	; 0xb56 <main+0x1e4>
     b54:	45 c0       	rjmp	.+138    	; 0xbe0 <main+0x26e>
     b56:	89 81       	ldd	r24, Y+1	; 0x01
     b58:	9a 81       	ldd	r25, Y+2	; 0x02
     b5a:	88 0f       	add	r24, r24
     b5c:	99 1f       	adc	r25, r25
     b5e:	9e 01       	movw	r18, r28
     b60:	2f 5f       	subi	r18, 0xFF	; 255
     b62:	3f 4f       	sbci	r19, 0xFF	; 255
     b64:	82 0f       	add	r24, r18
     b66:	93 1f       	adc	r25, r19
     b68:	84 96       	adiw	r24, 0x24	; 36
     b6a:	fc 01       	movw	r30, r24
     b6c:	00 81       	ld	r16, Z
     b6e:	11 81       	ldd	r17, Z+1	; 0x01
     b70:	89 81       	ldd	r24, Y+1	; 0x01
     b72:	9a 81       	ldd	r25, Y+2	; 0x02
     b74:	88 0f       	add	r24, r24
     b76:	99 1f       	adc	r25, r25
     b78:	9e 01       	movw	r18, r28
     b7a:	2f 5f       	subi	r18, 0xFF	; 255
     b7c:	3f 4f       	sbci	r19, 0xFF	; 255
     b7e:	82 0f       	add	r24, r18
     b80:	93 1f       	adc	r25, r19
     b82:	84 96       	adiw	r24, 0x24	; 36
     b84:	fc 01       	movw	r30, r24
     b86:	80 81       	ld	r24, Z
     b88:	91 81       	ldd	r25, Z+1	; 0x01
     b8a:	fc 01       	movw	r30, r24
     b8c:	21 85       	ldd	r18, Z+9	; 0x09
     b8e:	32 85       	ldd	r19, Z+10	; 0x0a
     b90:	89 81       	ldd	r24, Y+1	; 0x01
     b92:	9a 81       	ldd	r25, Y+2	; 0x02
     b94:	88 0f       	add	r24, r24
     b96:	99 1f       	adc	r25, r25
     b98:	ae 01       	movw	r20, r28
     b9a:	4f 5f       	subi	r20, 0xFF	; 255
     b9c:	5f 4f       	sbci	r21, 0xFF	; 255
     b9e:	84 0f       	add	r24, r20
     ba0:	95 1f       	adc	r25, r21
     ba2:	84 96       	adiw	r24, 0x24	; 36
     ba4:	fc 01       	movw	r30, r24
     ba6:	80 81       	ld	r24, Z
     ba8:	91 81       	ldd	r25, Z+1	; 0x01
     baa:	fc 01       	movw	r30, r24
     bac:	80 81       	ld	r24, Z
     bae:	08 2e       	mov	r0, r24
     bb0:	00 0c       	add	r0, r0
     bb2:	99 0b       	sbc	r25, r25
     bb4:	f9 01       	movw	r30, r18
     bb6:	09 95       	icall
     bb8:	f8 01       	movw	r30, r16
     bba:	80 83       	st	Z, r24
     bbc:	89 81       	ldd	r24, Y+1	; 0x01
     bbe:	9a 81       	ldd	r25, Y+2	; 0x02
     bc0:	88 0f       	add	r24, r24
     bc2:	99 1f       	adc	r25, r25
     bc4:	9e 01       	movw	r18, r28
     bc6:	2f 5f       	subi	r18, 0xFF	; 255
     bc8:	3f 4f       	sbci	r19, 0xFF	; 255
     bca:	82 0f       	add	r24, r18
     bcc:	93 1f       	adc	r25, r19
     bce:	84 96       	adiw	r24, 0x24	; 36
     bd0:	fc 01       	movw	r30, r24
     bd2:	80 81       	ld	r24, Z
     bd4:	91 81       	ldd	r25, Z+1	; 0x01
     bd6:	fc 01       	movw	r30, r24
     bd8:	15 82       	std	Z+5, r1	; 0x05
     bda:	16 82       	std	Z+6, r1	; 0x06
     bdc:	17 82       	std	Z+7, r1	; 0x07
     bde:	10 86       	std	Z+8, r1	; 0x08
     be0:	89 81       	ldd	r24, Y+1	; 0x01
     be2:	9a 81       	ldd	r25, Y+2	; 0x02
     be4:	88 0f       	add	r24, r24
     be6:	99 1f       	adc	r25, r25
     be8:	9e 01       	movw	r18, r28
     bea:	2f 5f       	subi	r18, 0xFF	; 255
     bec:	3f 4f       	sbci	r19, 0xFF	; 255
     bee:	82 0f       	add	r24, r18
     bf0:	93 1f       	adc	r25, r19
     bf2:	84 96       	adiw	r24, 0x24	; 36
     bf4:	fc 01       	movw	r30, r24
     bf6:	20 81       	ld	r18, Z
     bf8:	31 81       	ldd	r19, Z+1	; 0x01
     bfa:	89 81       	ldd	r24, Y+1	; 0x01
     bfc:	9a 81       	ldd	r25, Y+2	; 0x02
     bfe:	88 0f       	add	r24, r24
     c00:	99 1f       	adc	r25, r25
     c02:	ae 01       	movw	r20, r28
     c04:	4f 5f       	subi	r20, 0xFF	; 255
     c06:	5f 4f       	sbci	r21, 0xFF	; 255
     c08:	84 0f       	add	r24, r20
     c0a:	95 1f       	adc	r25, r21
     c0c:	84 96       	adiw	r24, 0x24	; 36
     c0e:	fc 01       	movw	r30, r24
     c10:	80 81       	ld	r24, Z
     c12:	91 81       	ldd	r25, Z+1	; 0x01
     c14:	fc 01       	movw	r30, r24
     c16:	85 81       	ldd	r24, Z+5	; 0x05
     c18:	96 81       	ldd	r25, Z+6	; 0x06
     c1a:	a7 81       	ldd	r26, Z+7	; 0x07
     c1c:	b0 85       	ldd	r27, Z+8	; 0x08
     c1e:	01 96       	adiw	r24, 0x01	; 1
     c20:	a1 1d       	adc	r26, r1
     c22:	b1 1d       	adc	r27, r1
     c24:	f9 01       	movw	r30, r18
     c26:	85 83       	std	Z+5, r24	; 0x05
     c28:	96 83       	std	Z+6, r25	; 0x06
     c2a:	a7 83       	std	Z+7, r26	; 0x07
     c2c:	b0 87       	std	Z+8, r27	; 0x08
     c2e:	89 81       	ldd	r24, Y+1	; 0x01
     c30:	9a 81       	ldd	r25, Y+2	; 0x02
     c32:	01 96       	adiw	r24, 0x01	; 1
     c34:	9a 83       	std	Y+2, r25	; 0x02
     c36:	89 83       	std	Y+1, r24	; 0x01
     c38:	29 81       	ldd	r18, Y+1	; 0x01
     c3a:	3a 81       	ldd	r19, Y+2	; 0x02
     c3c:	8b a1       	ldd	r24, Y+35	; 0x23
     c3e:	9c a1       	ldd	r25, Y+36	; 0x24
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	08 f4       	brcc	.+2      	; 0xc48 <main+0x2d6>
     c46:	5d cf       	rjmp	.-326    	; 0xb02 <main+0x190>
     c48:	00 00       	nop
     c4a:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <__data_end>
     c4e:	88 23       	and	r24, r24
     c50:	e1 f3       	breq	.-8      	; 0xc4a <main+0x2d8>
     c52:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <__data_end>
     c56:	52 cf       	rjmp	.-348    	; 0xafc <main+0x18a>

00000c58 <USS_Trigger>:
     c58:	cf 93       	push	r28
     c5a:	df 93       	push	r29
     c5c:	cd b7       	in	r28, 0x3d	; 61
     c5e:	de b7       	in	r29, 0x3e	; 62
     c60:	a0 97       	sbiw	r28, 0x20	; 32
     c62:	0f b6       	in	r0, 0x3f	; 63
     c64:	f8 94       	cli
     c66:	de bf       	out	0x3e, r29	; 62
     c68:	0f be       	out	0x3f, r0	; 63
     c6a:	cd bf       	out	0x3d, r28	; 61
     c6c:	82 e2       	ldi	r24, 0x22	; 34
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	22 e2       	ldi	r18, 0x22	; 34
     c72:	30 e0       	ldi	r19, 0x00	; 0
     c74:	f9 01       	movw	r30, r18
     c76:	20 81       	ld	r18, Z
     c78:	22 60       	ori	r18, 0x02	; 2
     c7a:	fc 01       	movw	r30, r24
     c7c:	20 83       	st	Z, r18
     c7e:	80 e0       	ldi	r24, 0x00	; 0
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	a0 e2       	ldi	r26, 0x20	; 32
     c84:	b1 e4       	ldi	r27, 0x41	; 65
     c86:	89 83       	std	Y+1, r24	; 0x01
     c88:	9a 83       	std	Y+2, r25	; 0x02
     c8a:	ab 83       	std	Y+3, r26	; 0x03
     c8c:	bc 83       	std	Y+4, r27	; 0x04
     c8e:	2b ea       	ldi	r18, 0xAB	; 171
     c90:	3a ea       	ldi	r19, 0xAA	; 170
     c92:	4a ea       	ldi	r20, 0xAA	; 170
     c94:	5e e3       	ldi	r21, 0x3E	; 62
     c96:	69 81       	ldd	r22, Y+1	; 0x01
     c98:	7a 81       	ldd	r23, Y+2	; 0x02
     c9a:	8b 81       	ldd	r24, Y+3	; 0x03
     c9c:	9c 81       	ldd	r25, Y+4	; 0x04
     c9e:	92 d4       	rcall	.+2340   	; 0x15c4 <__mulsf3>
     ca0:	dc 01       	movw	r26, r24
     ca2:	cb 01       	movw	r24, r22
     ca4:	8d 83       	std	Y+5, r24	; 0x05
     ca6:	9e 83       	std	Y+6, r25	; 0x06
     ca8:	af 83       	std	Y+7, r26	; 0x07
     caa:	b8 87       	std	Y+8, r27	; 0x08
     cac:	20 e0       	ldi	r18, 0x00	; 0
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	40 e8       	ldi	r20, 0x80	; 128
     cb2:	5e e3       	ldi	r21, 0x3E	; 62
     cb4:	69 81       	ldd	r22, Y+1	; 0x01
     cb6:	7a 81       	ldd	r23, Y+2	; 0x02
     cb8:	8b 81       	ldd	r24, Y+3	; 0x03
     cba:	9c 81       	ldd	r25, Y+4	; 0x04
     cbc:	83 d4       	rcall	.+2310   	; 0x15c4 <__mulsf3>
     cbe:	dc 01       	movw	r26, r24
     cc0:	cb 01       	movw	r24, r22
     cc2:	89 87       	std	Y+9, r24	; 0x09
     cc4:	9a 87       	std	Y+10, r25	; 0x0a
     cc6:	ab 87       	std	Y+11, r26	; 0x0b
     cc8:	bc 87       	std	Y+12, r27	; 0x0c
     cca:	20 e0       	ldi	r18, 0x00	; 0
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	40 e8       	ldi	r20, 0x80	; 128
     cd0:	5f e3       	ldi	r21, 0x3F	; 63
     cd2:	6d 81       	ldd	r22, Y+5	; 0x05
     cd4:	7e 81       	ldd	r23, Y+6	; 0x06
     cd6:	8f 81       	ldd	r24, Y+7	; 0x07
     cd8:	98 85       	ldd	r25, Y+8	; 0x08
     cda:	26 d3       	rcall	.+1612   	; 0x1328 <__cmpsf2>
     cdc:	88 23       	and	r24, r24
     cde:	1c f4       	brge	.+6      	; 0xce6 <USS_Trigger+0x8e>
     ce0:	81 e0       	ldi	r24, 0x01	; 1
     ce2:	8d 87       	std	Y+13, r24	; 0x0d
     ce4:	a7 c0       	rjmp	.+334    	; 0xe34 <USS_Trigger+0x1dc>
     ce6:	20 e0       	ldi	r18, 0x00	; 0
     ce8:	3f ef       	ldi	r19, 0xFF	; 255
     cea:	4f e7       	ldi	r20, 0x7F	; 127
     cec:	57 e4       	ldi	r21, 0x47	; 71
     cee:	69 85       	ldd	r22, Y+9	; 0x09
     cf0:	7a 85       	ldd	r23, Y+10	; 0x0a
     cf2:	8b 85       	ldd	r24, Y+11	; 0x0b
     cf4:	9c 85       	ldd	r25, Y+12	; 0x0c
     cf6:	62 d4       	rcall	.+2244   	; 0x15bc <__gesf2>
     cf8:	18 16       	cp	r1, r24
     cfa:	0c f0       	brlt	.+2      	; 0xcfe <USS_Trigger+0xa6>
     cfc:	74 c0       	rjmp	.+232    	; 0xde6 <USS_Trigger+0x18e>
     cfe:	20 e0       	ldi	r18, 0x00	; 0
     d00:	30 e0       	ldi	r19, 0x00	; 0
     d02:	4a e7       	ldi	r20, 0x7A	; 122
     d04:	54 e4       	ldi	r21, 0x44	; 68
     d06:	69 81       	ldd	r22, Y+1	; 0x01
     d08:	7a 81       	ldd	r23, Y+2	; 0x02
     d0a:	8b 81       	ldd	r24, Y+3	; 0x03
     d0c:	9c 81       	ldd	r25, Y+4	; 0x04
     d0e:	10 d3       	rcall	.+1568   	; 0x1330 <__divsf3>
     d10:	dc 01       	movw	r26, r24
     d12:	cb 01       	movw	r24, r22
     d14:	8e 87       	std	Y+14, r24	; 0x0e
     d16:	9f 87       	std	Y+15, r25	; 0x0f
     d18:	a8 8b       	std	Y+16, r26	; 0x10
     d1a:	b9 8b       	std	Y+17, r27	; 0x11
     d1c:	20 e0       	ldi	r18, 0x00	; 0
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	4a e7       	ldi	r20, 0x7A	; 122
     d22:	53 e4       	ldi	r21, 0x43	; 67
     d24:	6e 85       	ldd	r22, Y+14	; 0x0e
     d26:	7f 85       	ldd	r23, Y+15	; 0x0f
     d28:	88 89       	ldd	r24, Y+16	; 0x10
     d2a:	99 89       	ldd	r25, Y+17	; 0x11
     d2c:	4b d4       	rcall	.+2198   	; 0x15c4 <__mulsf3>
     d2e:	dc 01       	movw	r26, r24
     d30:	cb 01       	movw	r24, r22
     d32:	8a 8b       	std	Y+18, r24	; 0x12
     d34:	9b 8b       	std	Y+19, r25	; 0x13
     d36:	ac 8b       	std	Y+20, r26	; 0x14
     d38:	bd 8b       	std	Y+21, r27	; 0x15
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	40 e8       	ldi	r20, 0x80	; 128
     d40:	5f e3       	ldi	r21, 0x3F	; 63
     d42:	6a 89       	ldd	r22, Y+18	; 0x12
     d44:	7b 89       	ldd	r23, Y+19	; 0x13
     d46:	8c 89       	ldd	r24, Y+20	; 0x14
     d48:	9d 89       	ldd	r25, Y+21	; 0x15
     d4a:	ee d2       	rcall	.+1500   	; 0x1328 <__cmpsf2>
     d4c:	88 23       	and	r24, r24
     d4e:	2c f4       	brge	.+10     	; 0xd5a <USS_Trigger+0x102>
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	9f 8b       	std	Y+23, r25	; 0x17
     d56:	8e 8b       	std	Y+22, r24	; 0x16
     d58:	3b c0       	rjmp	.+118    	; 0xdd0 <USS_Trigger+0x178>
     d5a:	20 e0       	ldi	r18, 0x00	; 0
     d5c:	3f ef       	ldi	r19, 0xFF	; 255
     d5e:	4f e7       	ldi	r20, 0x7F	; 127
     d60:	57 e4       	ldi	r21, 0x47	; 71
     d62:	6a 89       	ldd	r22, Y+18	; 0x12
     d64:	7b 89       	ldd	r23, Y+19	; 0x13
     d66:	8c 89       	ldd	r24, Y+20	; 0x14
     d68:	9d 89       	ldd	r25, Y+21	; 0x15
     d6a:	28 d4       	rcall	.+2128   	; 0x15bc <__gesf2>
     d6c:	18 16       	cp	r1, r24
     d6e:	3c f5       	brge	.+78     	; 0xdbe <USS_Trigger+0x166>
     d70:	20 e0       	ldi	r18, 0x00	; 0
     d72:	30 e0       	ldi	r19, 0x00	; 0
     d74:	40 e2       	ldi	r20, 0x20	; 32
     d76:	51 e4       	ldi	r21, 0x41	; 65
     d78:	6e 85       	ldd	r22, Y+14	; 0x0e
     d7a:	7f 85       	ldd	r23, Y+15	; 0x0f
     d7c:	88 89       	ldd	r24, Y+16	; 0x10
     d7e:	99 89       	ldd	r25, Y+17	; 0x11
     d80:	21 d4       	rcall	.+2114   	; 0x15c4 <__mulsf3>
     d82:	dc 01       	movw	r26, r24
     d84:	cb 01       	movw	r24, r22
     d86:	bc 01       	movw	r22, r24
     d88:	cd 01       	movw	r24, r26
     d8a:	3a d3       	rcall	.+1652   	; 0x1400 <__fixunssfsi>
     d8c:	dc 01       	movw	r26, r24
     d8e:	cb 01       	movw	r24, r22
     d90:	9f 8b       	std	Y+23, r25	; 0x17
     d92:	8e 8b       	std	Y+22, r24	; 0x16
     d94:	0f c0       	rjmp	.+30     	; 0xdb4 <USS_Trigger+0x15c>
     d96:	89 e1       	ldi	r24, 0x19	; 25
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	99 8f       	std	Y+25, r25	; 0x19
     d9c:	88 8f       	std	Y+24, r24	; 0x18
     d9e:	88 8d       	ldd	r24, Y+24	; 0x18
     da0:	99 8d       	ldd	r25, Y+25	; 0x19
     da2:	01 97       	sbiw	r24, 0x01	; 1
     da4:	f1 f7       	brne	.-4      	; 0xda2 <USS_Trigger+0x14a>
     da6:	99 8f       	std	Y+25, r25	; 0x19
     da8:	88 8f       	std	Y+24, r24	; 0x18
     daa:	8e 89       	ldd	r24, Y+22	; 0x16
     dac:	9f 89       	ldd	r25, Y+23	; 0x17
     dae:	01 97       	sbiw	r24, 0x01	; 1
     db0:	9f 8b       	std	Y+23, r25	; 0x17
     db2:	8e 8b       	std	Y+22, r24	; 0x16
     db4:	8e 89       	ldd	r24, Y+22	; 0x16
     db6:	9f 89       	ldd	r25, Y+23	; 0x17
     db8:	89 2b       	or	r24, r25
     dba:	69 f7       	brne	.-38     	; 0xd96 <USS_Trigger+0x13e>
     dbc:	3b c0       	rjmp	.+118    	; 0xe34 <USS_Trigger+0x1dc>
     dbe:	6a 89       	ldd	r22, Y+18	; 0x12
     dc0:	7b 89       	ldd	r23, Y+19	; 0x13
     dc2:	8c 89       	ldd	r24, Y+20	; 0x14
     dc4:	9d 89       	ldd	r25, Y+21	; 0x15
     dc6:	1c d3       	rcall	.+1592   	; 0x1400 <__fixunssfsi>
     dc8:	dc 01       	movw	r26, r24
     dca:	cb 01       	movw	r24, r22
     dcc:	9f 8b       	std	Y+23, r25	; 0x17
     dce:	8e 8b       	std	Y+22, r24	; 0x16
     dd0:	8e 89       	ldd	r24, Y+22	; 0x16
     dd2:	9f 89       	ldd	r25, Y+23	; 0x17
     dd4:	9b 8f       	std	Y+27, r25	; 0x1b
     dd6:	8a 8f       	std	Y+26, r24	; 0x1a
     dd8:	8a 8d       	ldd	r24, Y+26	; 0x1a
     dda:	9b 8d       	ldd	r25, Y+27	; 0x1b
     ddc:	01 97       	sbiw	r24, 0x01	; 1
     dde:	f1 f7       	brne	.-4      	; 0xddc <USS_Trigger+0x184>
     de0:	9b 8f       	std	Y+27, r25	; 0x1b
     de2:	8a 8f       	std	Y+26, r24	; 0x1a
     de4:	27 c0       	rjmp	.+78     	; 0xe34 <USS_Trigger+0x1dc>
     de6:	20 e0       	ldi	r18, 0x00	; 0
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	4f e7       	ldi	r20, 0x7F	; 127
     dec:	53 e4       	ldi	r21, 0x43	; 67
     dee:	6d 81       	ldd	r22, Y+5	; 0x05
     df0:	7e 81       	ldd	r23, Y+6	; 0x06
     df2:	8f 81       	ldd	r24, Y+7	; 0x07
     df4:	98 85       	ldd	r25, Y+8	; 0x08
     df6:	e2 d3       	rcall	.+1988   	; 0x15bc <__gesf2>
     df8:	18 16       	cp	r1, r24
     dfa:	a4 f4       	brge	.+40     	; 0xe24 <USS_Trigger+0x1cc>
     dfc:	69 85       	ldd	r22, Y+9	; 0x09
     dfe:	7a 85       	ldd	r23, Y+10	; 0x0a
     e00:	8b 85       	ldd	r24, Y+11	; 0x0b
     e02:	9c 85       	ldd	r25, Y+12	; 0x0c
     e04:	fd d2       	rcall	.+1530   	; 0x1400 <__fixunssfsi>
     e06:	dc 01       	movw	r26, r24
     e08:	cb 01       	movw	r24, r22
     e0a:	9d 8f       	std	Y+29, r25	; 0x1d
     e0c:	8c 8f       	std	Y+28, r24	; 0x1c
     e0e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     e10:	9d 8d       	ldd	r25, Y+29	; 0x1d
     e12:	9f 8f       	std	Y+31, r25	; 0x1f
     e14:	8e 8f       	std	Y+30, r24	; 0x1e
     e16:	8e 8d       	ldd	r24, Y+30	; 0x1e
     e18:	9f 8d       	ldd	r25, Y+31	; 0x1f
     e1a:	01 97       	sbiw	r24, 0x01	; 1
     e1c:	f1 f7       	brne	.-4      	; 0xe1a <USS_Trigger+0x1c2>
     e1e:	9f 8f       	std	Y+31, r25	; 0x1f
     e20:	8e 8f       	std	Y+30, r24	; 0x1e
     e22:	0e c0       	rjmp	.+28     	; 0xe40 <USS_Trigger+0x1e8>
     e24:	6d 81       	ldd	r22, Y+5	; 0x05
     e26:	7e 81       	ldd	r23, Y+6	; 0x06
     e28:	8f 81       	ldd	r24, Y+7	; 0x07
     e2a:	98 85       	ldd	r25, Y+8	; 0x08
     e2c:	e9 d2       	rcall	.+1490   	; 0x1400 <__fixunssfsi>
     e2e:	dc 01       	movw	r26, r24
     e30:	cb 01       	movw	r24, r22
     e32:	8d 87       	std	Y+13, r24	; 0x0d
     e34:	8d 85       	ldd	r24, Y+13	; 0x0d
     e36:	88 a3       	std	Y+32, r24	; 0x20
     e38:	88 a1       	ldd	r24, Y+32	; 0x20
     e3a:	8a 95       	dec	r24
     e3c:	f1 f7       	brne	.-4      	; 0xe3a <USS_Trigger+0x1e2>
     e3e:	88 a3       	std	Y+32, r24	; 0x20
     e40:	82 e2       	ldi	r24, 0x22	; 34
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	22 e2       	ldi	r18, 0x22	; 34
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	f9 01       	movw	r30, r18
     e4a:	20 81       	ld	r18, Z
     e4c:	2c 7f       	andi	r18, 0xFC	; 252
     e4e:	fc 01       	movw	r30, r24
     e50:	20 83       	st	Z, r18
     e52:	00 00       	nop
     e54:	a0 96       	adiw	r28, 0x20	; 32
     e56:	0f b6       	in	r0, 0x3f	; 63
     e58:	f8 94       	cli
     e5a:	de bf       	out	0x3e, r29	; 62
     e5c:	0f be       	out	0x3f, r0	; 63
     e5e:	cd bf       	out	0x3d, r28	; 61
     e60:	df 91       	pop	r29
     e62:	cf 91       	pop	r28
     e64:	08 95       	ret

00000e66 <get_dist>:
void get_dist(){
     e66:	cf 93       	push	r28
     e68:	df 93       	push	r29
     e6a:	cd b7       	in	r28, 0x3d	; 61
	USS_Trigger(); // triggering
     e6c:	de b7       	in	r29, 0x3e	; 62
	while ((PINA & ECHOMSK) == 0) { ; } //wait for rising edge of Echo
     e6e:	f4 de       	rcall	.-536    	; 0xc58 <USS_Trigger>
     e70:	00 00       	nop
     e72:	80 e2       	ldi	r24, 0x20	; 32
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	fc 01       	movw	r30, r24
     e78:	80 81       	ld	r24, Z
     e7a:	88 2f       	mov	r24, r24
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	81 70       	andi	r24, 0x01	; 1
     e80:	99 27       	eor	r25, r25
     e82:	89 2b       	or	r24, r25
	TCCR1B = (1<<CS10);                 //start timer div1
     e84:	b1 f3       	breq	.-20     	; 0xe72 <get_dist+0xc>
     e86:	81 e8       	ldi	r24, 0x81	; 129
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	21 e0       	ldi	r18, 0x01	; 1
     e8c:	fc 01       	movw	r30, r24
	while ((PINA & ECHOMSK) != 0) { ; } //wait for falling edge
     e8e:	20 83       	st	Z, r18
     e90:	00 00       	nop
     e92:	80 e2       	ldi	r24, 0x20	; 32
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	fc 01       	movw	r30, r24
     e98:	80 81       	ld	r24, Z
     e9a:	88 2f       	mov	r24, r24
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	81 70       	andi	r24, 0x01	; 1
     ea0:	99 27       	eor	r25, r25
     ea2:	89 2b       	or	r24, r25
	TCCR1B = 0;                         //stop timer
     ea4:	b1 f7       	brne	.-20     	; 0xe92 <get_dist+0x2c>
     ea6:	81 e8       	ldi	r24, 0x81	; 129
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	fc 01       	movw	r30, r24
	Pulse_Time = TCNT1; // take what's in TCNT1 timer
     eac:	10 82       	st	Z, r1
     eae:	84 e8       	ldi	r24, 0x84	; 132
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	fc 01       	movw	r30, r24
     eb4:	80 81       	ld	r24, Z
     eb6:	91 81       	ldd	r25, Z+1	; 0x01
     eb8:	90 93 b4 01 	sts	0x01B4, r25	; 0x8001b4 <Pulse_Time+0x1>
     ebc:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <Pulse_Time>
	TCNT1 = 0x00; //reset what's in TCNT1 timer
     ec0:	84 e8       	ldi	r24, 0x84	; 132
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	fc 01       	movw	r30, r24
     ec6:	11 82       	std	Z+1, r1	; 0x01
	
	Distance = Pulse_Time / 588.2; // get distance measurement
     ec8:	10 82       	st	Z, r1
     eca:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <Pulse_Time>
     ece:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <Pulse_Time+0x1>
     ed2:	cc 01       	movw	r24, r24
     ed4:	a0 e0       	ldi	r26, 0x00	; 0
     ed6:	b0 e0       	ldi	r27, 0x00	; 0
     ed8:	bc 01       	movw	r22, r24
     eda:	cd 01       	movw	r24, r26
     edc:	bd d2       	rcall	.+1402   	; 0x1458 <__floatunsisf>
     ede:	dc 01       	movw	r26, r24
     ee0:	cb 01       	movw	r24, r22
     ee2:	2d ec       	ldi	r18, 0xCD	; 205
     ee4:	3c e0       	ldi	r19, 0x0C	; 12
     ee6:	43 e1       	ldi	r20, 0x13	; 19
     ee8:	54 e4       	ldi	r21, 0x44	; 68
     eea:	bc 01       	movw	r22, r24
     eec:	cd 01       	movw	r24, r26
     eee:	20 d2       	rcall	.+1088   	; 0x1330 <__divsf3>
     ef0:	dc 01       	movw	r26, r24
     ef2:	cb 01       	movw	r24, r22
     ef4:	bc 01       	movw	r22, r24
     ef6:	cd 01       	movw	r24, r26
     ef8:	83 d2       	rcall	.+1286   	; 0x1400 <__fixunssfsi>
     efa:	dc 01       	movw	r26, r24
     efc:	cb 01       	movw	r24, r22
     efe:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <Distance+0x1>

	//_delay_ms(50);
	TimerOn();
     f02:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <Distance>

}
     f06:	d2 da       	rcall	.-2652   	; 0x4ac <TimerOn>
     f08:	00 00       	nop
     f0a:	df 91       	pop	r29
     f0c:	cf 91       	pop	r28
     f0e:	08 95       	ret

00000f10 <BT_rename>:

void BT_rename( char *sendMe ) {
     f10:	cf 93       	push	r28
     f12:	df 93       	push	r29
     f14:	cd b7       	in	r28, 0x3d	; 61
     f16:	de b7       	in	r29, 0x3e	; 62
     f18:	6e 97       	sbiw	r28, 0x1e	; 30
     f1a:	0f b6       	in	r0, 0x3f	; 63
     f1c:	f8 94       	cli
     f1e:	de bf       	out	0x3e, r29	; 62
     f20:	0f be       	out	0x3f, r0	; 63
     f22:	cd bf       	out	0x3d, r28	; 61
     f24:	9e 8f       	std	Y+30, r25	; 0x1e
     f26:	8d 8f       	std	Y+29, r24	; 0x1d
     f28:	80 e0       	ldi	r24, 0x00	; 0
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	aa ef       	ldi	r26, 0xFA	; 250
     f2e:	b3 e4       	ldi	r27, 0x43	; 67
     f30:	89 83       	std	Y+1, r24	; 0x01
     f32:	9a 83       	std	Y+2, r25	; 0x02
     f34:	ab 83       	std	Y+3, r26	; 0x03
     f36:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     f38:	20 e0       	ldi	r18, 0x00	; 0
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	4a e7       	ldi	r20, 0x7A	; 122
     f3e:	53 e4       	ldi	r21, 0x43	; 67
     f40:	69 81       	ldd	r22, Y+1	; 0x01
     f42:	7a 81       	ldd	r23, Y+2	; 0x02
     f44:	8b 81       	ldd	r24, Y+3	; 0x03
     f46:	9c 81       	ldd	r25, Y+4	; 0x04
     f48:	3d d3       	rcall	.+1658   	; 0x15c4 <__mulsf3>
     f4a:	dc 01       	movw	r26, r24
     f4c:	cb 01       	movw	r24, r22
     f4e:	8b 8b       	std	Y+19, r24	; 0x13
     f50:	9c 8b       	std	Y+20, r25	; 0x14
     f52:	ad 8b       	std	Y+21, r26	; 0x15
     f54:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     f56:	20 e0       	ldi	r18, 0x00	; 0
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	40 e8       	ldi	r20, 0x80	; 128
     f5c:	5f e3       	ldi	r21, 0x3F	; 63
     f5e:	6b 89       	ldd	r22, Y+19	; 0x13
     f60:	7c 89       	ldd	r23, Y+20	; 0x14
     f62:	8d 89       	ldd	r24, Y+21	; 0x15
     f64:	9e 89       	ldd	r25, Y+22	; 0x16
     f66:	e0 d1       	rcall	.+960    	; 0x1328 <__cmpsf2>
     f68:	88 23       	and	r24, r24
     f6a:	2c f4       	brge	.+10     	; 0xf76 <BT_rename+0x66>
		__ticks = 1;
     f6c:	81 e0       	ldi	r24, 0x01	; 1
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	98 8f       	std	Y+24, r25	; 0x18
     f72:	8f 8b       	std	Y+23, r24	; 0x17
     f74:	3b c0       	rjmp	.+118    	; 0xfec <BT_rename+0xdc>
	else if (__tmp > 65535)
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	3f ef       	ldi	r19, 0xFF	; 255
     f7a:	4f e7       	ldi	r20, 0x7F	; 127
     f7c:	57 e4       	ldi	r21, 0x47	; 71
     f7e:	6b 89       	ldd	r22, Y+19	; 0x13
     f80:	7c 89       	ldd	r23, Y+20	; 0x14
     f82:	8d 89       	ldd	r24, Y+21	; 0x15
     f84:	9e 89       	ldd	r25, Y+22	; 0x16
     f86:	1a d3       	rcall	.+1588   	; 0x15bc <__gesf2>
     f88:	18 16       	cp	r1, r24
     f8a:	3c f5       	brge	.+78     	; 0xfda <BT_rename+0xca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f8c:	20 e0       	ldi	r18, 0x00	; 0
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	40 e2       	ldi	r20, 0x20	; 32
     f92:	51 e4       	ldi	r21, 0x41	; 65
     f94:	69 81       	ldd	r22, Y+1	; 0x01
     f96:	7a 81       	ldd	r23, Y+2	; 0x02
     f98:	8b 81       	ldd	r24, Y+3	; 0x03
     f9a:	9c 81       	ldd	r25, Y+4	; 0x04
     f9c:	13 d3       	rcall	.+1574   	; 0x15c4 <__mulsf3>
     f9e:	dc 01       	movw	r26, r24
     fa0:	cb 01       	movw	r24, r22
     fa2:	bc 01       	movw	r22, r24
     fa4:	cd 01       	movw	r24, r26
     fa6:	2c d2       	rcall	.+1112   	; 0x1400 <__fixunssfsi>
     fa8:	dc 01       	movw	r26, r24
     faa:	cb 01       	movw	r24, r22
     fac:	98 8f       	std	Y+24, r25	; 0x18
     fae:	8f 8b       	std	Y+23, r24	; 0x17
     fb0:	0f c0       	rjmp	.+30     	; 0xfd0 <BT_rename+0xc0>
     fb2:	89 e1       	ldi	r24, 0x19	; 25
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	9a 8f       	std	Y+26, r25	; 0x1a
     fb8:	89 8f       	std	Y+25, r24	; 0x19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     fba:	89 8d       	ldd	r24, Y+25	; 0x19
     fbc:	9a 8d       	ldd	r25, Y+26	; 0x1a
     fbe:	01 97       	sbiw	r24, 0x01	; 1
     fc0:	f1 f7       	brne	.-4      	; 0xfbe <BT_rename+0xae>
     fc2:	9a 8f       	std	Y+26, r25	; 0x1a
     fc4:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fc6:	8f 89       	ldd	r24, Y+23	; 0x17
     fc8:	98 8d       	ldd	r25, Y+24	; 0x18
     fca:	01 97       	sbiw	r24, 0x01	; 1
     fcc:	98 8f       	std	Y+24, r25	; 0x18
     fce:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fd0:	8f 89       	ldd	r24, Y+23	; 0x17
     fd2:	98 8d       	ldd	r25, Y+24	; 0x18
     fd4:	89 2b       	or	r24, r25
     fd6:	69 f7       	brne	.-38     	; 0xfb2 <BT_rename+0xa2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fd8:	13 c0       	rjmp	.+38     	; 0x1000 <BT_rename+0xf0>
     fda:	6b 89       	ldd	r22, Y+19	; 0x13
     fdc:	7c 89       	ldd	r23, Y+20	; 0x14
     fde:	8d 89       	ldd	r24, Y+21	; 0x15
     fe0:	9e 89       	ldd	r25, Y+22	; 0x16
     fe2:	0e d2       	rcall	.+1052   	; 0x1400 <__fixunssfsi>
     fe4:	dc 01       	movw	r26, r24
     fe6:	cb 01       	movw	r24, r22
     fe8:	98 8f       	std	Y+24, r25	; 0x18
     fea:	8f 8b       	std	Y+23, r24	; 0x17
     fec:	8f 89       	ldd	r24, Y+23	; 0x17
     fee:	98 8d       	ldd	r25, Y+24	; 0x18
     ff0:	9c 8f       	std	Y+28, r25	; 0x1c
     ff2:	8b 8f       	std	Y+27, r24	; 0x1b
     ff4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     ff6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     ff8:	01 97       	sbiw	r24, 0x01	; 1
     ffa:	f1 f7       	brne	.-4      	; 0xff8 <BT_rename+0xe8>
     ffc:	9c 8f       	std	Y+28, r25	; 0x1c
		_delay_ms(500);

		USART_SendString(discStr, 2, 0);
     ffe:	8b 8f       	std	Y+27, r24	; 0x1b
    1000:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <discStr>
    1004:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <discStr+0x1>
    1008:	40 e0       	ldi	r20, 0x00	; 0
    100a:	62 e0       	ldi	r22, 0x02	; 2
    100c:	95 d9       	rcall	.-3286   	; 0x338 <USART_SendString>
    100e:	80 e0       	ldi	r24, 0x00	; 0
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	aa ef       	ldi	r26, 0xFA	; 250
    1014:	b4 e4       	ldi	r27, 0x44	; 68
    1016:	8d 83       	std	Y+5, r24	; 0x05
    1018:	9e 83       	std	Y+6, r25	; 0x06
    101a:	af 83       	std	Y+7, r26	; 0x07

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    101c:	b8 87       	std	Y+8, r27	; 0x08
    101e:	20 e0       	ldi	r18, 0x00	; 0
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	4a e7       	ldi	r20, 0x7A	; 122
    1024:	53 e4       	ldi	r21, 0x43	; 67
    1026:	6d 81       	ldd	r22, Y+5	; 0x05
    1028:	7e 81       	ldd	r23, Y+6	; 0x06
    102a:	8f 81       	ldd	r24, Y+7	; 0x07
    102c:	98 85       	ldd	r25, Y+8	; 0x08
    102e:	ca d2       	rcall	.+1428   	; 0x15c4 <__mulsf3>
    1030:	dc 01       	movw	r26, r24
    1032:	cb 01       	movw	r24, r22
    1034:	89 87       	std	Y+9, r24	; 0x09
    1036:	9a 87       	std	Y+10, r25	; 0x0a
	if (__tmp < 1.0)
    1038:	ab 87       	std	Y+11, r26	; 0x0b
    103a:	bc 87       	std	Y+12, r27	; 0x0c
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	40 e8       	ldi	r20, 0x80	; 128
    1042:	5f e3       	ldi	r21, 0x3F	; 63
    1044:	69 85       	ldd	r22, Y+9	; 0x09
    1046:	7a 85       	ldd	r23, Y+10	; 0x0a
    1048:	8b 85       	ldd	r24, Y+11	; 0x0b
    104a:	9c 85       	ldd	r25, Y+12	; 0x0c
    104c:	6d d1       	rcall	.+730    	; 0x1328 <__cmpsf2>
		__ticks = 1;
    104e:	88 23       	and	r24, r24
    1050:	2c f4       	brge	.+10     	; 0x105c <BT_rename+0x14c>
    1052:	81 e0       	ldi	r24, 0x01	; 1
    1054:	90 e0       	ldi	r25, 0x00	; 0
	else if (__tmp > 65535)
    1056:	9e 87       	std	Y+14, r25	; 0x0e
    1058:	8d 87       	std	Y+13, r24	; 0x0d
    105a:	3b c0       	rjmp	.+118    	; 0x10d2 <BT_rename+0x1c2>
    105c:	20 e0       	ldi	r18, 0x00	; 0
    105e:	3f ef       	ldi	r19, 0xFF	; 255
    1060:	4f e7       	ldi	r20, 0x7F	; 127
    1062:	57 e4       	ldi	r21, 0x47	; 71
    1064:	69 85       	ldd	r22, Y+9	; 0x09
    1066:	7a 85       	ldd	r23, Y+10	; 0x0a
    1068:	8b 85       	ldd	r24, Y+11	; 0x0b
    106a:	9c 85       	ldd	r25, Y+12	; 0x0c
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    106c:	a7 d2       	rcall	.+1358   	; 0x15bc <__gesf2>
    106e:	18 16       	cp	r1, r24
    1070:	3c f5       	brge	.+78     	; 0x10c0 <BT_rename+0x1b0>
    1072:	20 e0       	ldi	r18, 0x00	; 0
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	40 e2       	ldi	r20, 0x20	; 32
    1078:	51 e4       	ldi	r21, 0x41	; 65
    107a:	6d 81       	ldd	r22, Y+5	; 0x05
    107c:	7e 81       	ldd	r23, Y+6	; 0x06
    107e:	8f 81       	ldd	r24, Y+7	; 0x07
    1080:	98 85       	ldd	r25, Y+8	; 0x08
    1082:	a0 d2       	rcall	.+1344   	; 0x15c4 <__mulsf3>
    1084:	dc 01       	movw	r26, r24
    1086:	cb 01       	movw	r24, r22
    1088:	bc 01       	movw	r22, r24
    108a:	cd 01       	movw	r24, r26
    108c:	b9 d1       	rcall	.+882    	; 0x1400 <__fixunssfsi>
    108e:	dc 01       	movw	r26, r24
    1090:	cb 01       	movw	r24, r22
    1092:	9e 87       	std	Y+14, r25	; 0x0e
    1094:	8d 87       	std	Y+13, r24	; 0x0d
    1096:	0f c0       	rjmp	.+30     	; 0x10b6 <BT_rename+0x1a6>
    1098:	89 e1       	ldi	r24, 0x19	; 25
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	98 8b       	std	Y+16, r25	; 0x10
    109e:	8f 87       	std	Y+15, r24	; 0x0f
    10a0:	8f 85       	ldd	r24, Y+15	; 0x0f
    10a2:	98 89       	ldd	r25, Y+16	; 0x10
    10a4:	01 97       	sbiw	r24, 0x01	; 1
    10a6:	f1 f7       	brne	.-4      	; 0x10a4 <BT_rename+0x194>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10a8:	98 8b       	std	Y+16, r25	; 0x10
    10aa:	8f 87       	std	Y+15, r24	; 0x0f
    10ac:	8d 85       	ldd	r24, Y+13	; 0x0d
    10ae:	9e 85       	ldd	r25, Y+14	; 0x0e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10b0:	01 97       	sbiw	r24, 0x01	; 1
    10b2:	9e 87       	std	Y+14, r25	; 0x0e
    10b4:	8d 87       	std	Y+13, r24	; 0x0d
    10b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    10b8:	9e 85       	ldd	r25, Y+14	; 0x0e
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10ba:	89 2b       	or	r24, r25
    10bc:	69 f7       	brne	.-38     	; 0x1098 <BT_rename+0x188>
    10be:	13 c0       	rjmp	.+38     	; 0x10e6 <BT_rename+0x1d6>
    10c0:	69 85       	ldd	r22, Y+9	; 0x09
    10c2:	7a 85       	ldd	r23, Y+10	; 0x0a
    10c4:	8b 85       	ldd	r24, Y+11	; 0x0b
    10c6:	9c 85       	ldd	r25, Y+12	; 0x0c
    10c8:	9b d1       	rcall	.+822    	; 0x1400 <__fixunssfsi>
    10ca:	dc 01       	movw	r26, r24
    10cc:	cb 01       	movw	r24, r22
    10ce:	9e 87       	std	Y+14, r25	; 0x0e
    10d0:	8d 87       	std	Y+13, r24	; 0x0d
    10d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    10d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    10d6:	9a 8b       	std	Y+18, r25	; 0x12
    10d8:	89 8b       	std	Y+17, r24	; 0x11
    10da:	89 89       	ldd	r24, Y+17	; 0x11

		//give some time to dc
		_delay_ms(2000);
		
		USART_SendString("AT+NAME", 0, 0);
    10dc:	9a 89       	ldd	r25, Y+18	; 0x12
    10de:	01 97       	sbiw	r24, 0x01	; 1
    10e0:	f1 f7       	brne	.-4      	; 0x10de <BT_rename+0x1ce>
    10e2:	9a 8b       	std	Y+18, r25	; 0x12
    10e4:	89 8b       	std	Y+17, r24	; 0x11
		USART_SendString(name, 0, 0);
    10e6:	40 e0       	ldi	r20, 0x00	; 0
    10e8:	60 e0       	ldi	r22, 0x00	; 0
    10ea:	8e e8       	ldi	r24, 0x8E	; 142
    10ec:	91 e0       	ldi	r25, 0x01	; 1
    10ee:	24 d9       	rcall	.-3512   	; 0x338 <USART_SendString>
    10f0:	40 e0       	ldi	r20, 0x00	; 0
		USART_Send(0x0d, 0);
    10f2:	60 e0       	ldi	r22, 0x00	; 0
    10f4:	87 e0       	ldi	r24, 0x07	; 7
    10f6:	91 e0       	ldi	r25, 0x01	; 1
    10f8:	1f d9       	rcall	.-3522   	; 0x338 <USART_SendString>
		USART_Send(0x0a, 0);
    10fa:	60 e0       	ldi	r22, 0x00	; 0
    10fc:	8d e0       	ldi	r24, 0x0D	; 13
    10fe:	82 d8       	rcall	.-3836   	; 0x204 <USART_Send>
    1100:	60 e0       	ldi	r22, 0x00	; 0


		//USART_SendString(reccStr, 2, 0);

}
    1102:	8a e0       	ldi	r24, 0x0A	; 10
    1104:	7f d8       	rcall	.-3842   	; 0x204 <USART_Send>
    1106:	00 00       	nop
    1108:	6e 96       	adiw	r28, 0x1e	; 30
    110a:	0f b6       	in	r0, 0x3f	; 63
    110c:	f8 94       	cli
    110e:	de bf       	out	0x3e, r29	; 62
    1110:	0f be       	out	0x3f, r0	; 63
    1112:	cd bf       	out	0x3d, r28	; 61
    1114:	df 91       	pop	r29
    1116:	cf 91       	pop	r28
    1118:	08 95       	ret

0000111a <BT_changePin>:
void BT_changePin( char *sendMe ) {
    111a:	cf 93       	push	r28
    111c:	df 93       	push	r29
    111e:	cd b7       	in	r28, 0x3d	; 61
    1120:	de b7       	in	r29, 0x3e	; 62
    1122:	6e 97       	sbiw	r28, 0x1e	; 30
    1124:	0f b6       	in	r0, 0x3f	; 63
    1126:	f8 94       	cli
    1128:	de bf       	out	0x3e, r29	; 62
    112a:	0f be       	out	0x3f, r0	; 63
    112c:	cd bf       	out	0x3d, r28	; 61
    112e:	9e 8f       	std	Y+30, r25	; 0x1e
    1130:	8d 8f       	std	Y+29, r24	; 0x1d
    1132:	80 e0       	ldi	r24, 0x00	; 0
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	aa ef       	ldi	r26, 0xFA	; 250
    1138:	b3 e4       	ldi	r27, 0x43	; 67
    113a:	89 83       	std	Y+1, r24	; 0x01
    113c:	9a 83       	std	Y+2, r25	; 0x02
    113e:	ab 83       	std	Y+3, r26	; 0x03
    1140:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1142:	20 e0       	ldi	r18, 0x00	; 0
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	4a e7       	ldi	r20, 0x7A	; 122
    1148:	53 e4       	ldi	r21, 0x43	; 67
    114a:	69 81       	ldd	r22, Y+1	; 0x01
    114c:	7a 81       	ldd	r23, Y+2	; 0x02
    114e:	8b 81       	ldd	r24, Y+3	; 0x03
    1150:	9c 81       	ldd	r25, Y+4	; 0x04
    1152:	38 d2       	rcall	.+1136   	; 0x15c4 <__mulsf3>
    1154:	dc 01       	movw	r26, r24
    1156:	cb 01       	movw	r24, r22
    1158:	8b 8b       	std	Y+19, r24	; 0x13
    115a:	9c 8b       	std	Y+20, r25	; 0x14
    115c:	ad 8b       	std	Y+21, r26	; 0x15
    115e:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
    1160:	20 e0       	ldi	r18, 0x00	; 0
    1162:	30 e0       	ldi	r19, 0x00	; 0
    1164:	40 e8       	ldi	r20, 0x80	; 128
    1166:	5f e3       	ldi	r21, 0x3F	; 63
    1168:	6b 89       	ldd	r22, Y+19	; 0x13
    116a:	7c 89       	ldd	r23, Y+20	; 0x14
    116c:	8d 89       	ldd	r24, Y+21	; 0x15
    116e:	9e 89       	ldd	r25, Y+22	; 0x16
    1170:	db d0       	rcall	.+438    	; 0x1328 <__cmpsf2>
    1172:	88 23       	and	r24, r24
    1174:	2c f4       	brge	.+10     	; 0x1180 <BT_changePin+0x66>
		__ticks = 1;
    1176:	81 e0       	ldi	r24, 0x01	; 1
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	98 8f       	std	Y+24, r25	; 0x18
    117c:	8f 8b       	std	Y+23, r24	; 0x17
    117e:	3b c0       	rjmp	.+118    	; 0x11f6 <BT_changePin+0xdc>
	else if (__tmp > 65535)
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	3f ef       	ldi	r19, 0xFF	; 255
    1184:	4f e7       	ldi	r20, 0x7F	; 127
    1186:	57 e4       	ldi	r21, 0x47	; 71
    1188:	6b 89       	ldd	r22, Y+19	; 0x13
    118a:	7c 89       	ldd	r23, Y+20	; 0x14
    118c:	8d 89       	ldd	r24, Y+21	; 0x15
    118e:	9e 89       	ldd	r25, Y+22	; 0x16
    1190:	15 d2       	rcall	.+1066   	; 0x15bc <__gesf2>
    1192:	18 16       	cp	r1, r24
    1194:	3c f5       	brge	.+78     	; 0x11e4 <BT_changePin+0xca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1196:	20 e0       	ldi	r18, 0x00	; 0
    1198:	30 e0       	ldi	r19, 0x00	; 0
    119a:	40 e2       	ldi	r20, 0x20	; 32
    119c:	51 e4       	ldi	r21, 0x41	; 65
    119e:	69 81       	ldd	r22, Y+1	; 0x01
    11a0:	7a 81       	ldd	r23, Y+2	; 0x02
    11a2:	8b 81       	ldd	r24, Y+3	; 0x03
    11a4:	9c 81       	ldd	r25, Y+4	; 0x04
    11a6:	0e d2       	rcall	.+1052   	; 0x15c4 <__mulsf3>
    11a8:	dc 01       	movw	r26, r24
    11aa:	cb 01       	movw	r24, r22
    11ac:	bc 01       	movw	r22, r24
    11ae:	cd 01       	movw	r24, r26
    11b0:	27 d1       	rcall	.+590    	; 0x1400 <__fixunssfsi>
    11b2:	dc 01       	movw	r26, r24
    11b4:	cb 01       	movw	r24, r22
    11b6:	98 8f       	std	Y+24, r25	; 0x18
    11b8:	8f 8b       	std	Y+23, r24	; 0x17
    11ba:	0f c0       	rjmp	.+30     	; 0x11da <BT_changePin+0xc0>
    11bc:	89 e1       	ldi	r24, 0x19	; 25
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	9a 8f       	std	Y+26, r25	; 0x1a
    11c2:	89 8f       	std	Y+25, r24	; 0x19
    11c4:	89 8d       	ldd	r24, Y+25	; 0x19
    11c6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    11c8:	01 97       	sbiw	r24, 0x01	; 1
    11ca:	f1 f7       	brne	.-4      	; 0x11c8 <BT_changePin+0xae>
    11cc:	9a 8f       	std	Y+26, r25	; 0x1a
    11ce:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11d0:	8f 89       	ldd	r24, Y+23	; 0x17
    11d2:	98 8d       	ldd	r25, Y+24	; 0x18
    11d4:	01 97       	sbiw	r24, 0x01	; 1
    11d6:	98 8f       	std	Y+24, r25	; 0x18
    11d8:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11da:	8f 89       	ldd	r24, Y+23	; 0x17
    11dc:	98 8d       	ldd	r25, Y+24	; 0x18
    11de:	89 2b       	or	r24, r25
    11e0:	69 f7       	brne	.-38     	; 0x11bc <BT_changePin+0xa2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11e2:	13 c0       	rjmp	.+38     	; 0x120a <BT_changePin+0xf0>
    11e4:	6b 89       	ldd	r22, Y+19	; 0x13
    11e6:	7c 89       	ldd	r23, Y+20	; 0x14
    11e8:	8d 89       	ldd	r24, Y+21	; 0x15
    11ea:	9e 89       	ldd	r25, Y+22	; 0x16
    11ec:	09 d1       	rcall	.+530    	; 0x1400 <__fixunssfsi>
    11ee:	dc 01       	movw	r26, r24
    11f0:	cb 01       	movw	r24, r22
    11f2:	98 8f       	std	Y+24, r25	; 0x18
    11f4:	8f 8b       	std	Y+23, r24	; 0x17
    11f6:	8f 89       	ldd	r24, Y+23	; 0x17
    11f8:	98 8d       	ldd	r25, Y+24	; 0x18
    11fa:	9c 8f       	std	Y+28, r25	; 0x1c
    11fc:	8b 8f       	std	Y+27, r24	; 0x1b
    11fe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1200:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1202:	01 97       	sbiw	r24, 0x01	; 1
    1204:	f1 f7       	brne	.-4      	; 0x1202 <BT_changePin+0xe8>
    1206:	9c 8f       	std	Y+28, r25	; 0x1c
	_delay_ms(500);

	USART_SendString(discStr, 2, 0);
    1208:	8b 8f       	std	Y+27, r24	; 0x1b
    120a:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <discStr>
    120e:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <discStr+0x1>
    1212:	40 e0       	ldi	r20, 0x00	; 0
    1214:	62 e0       	ldi	r22, 0x02	; 2
    1216:	90 d8       	rcall	.-3808   	; 0x338 <USART_SendString>
    1218:	80 e0       	ldi	r24, 0x00	; 0
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	aa ef       	ldi	r26, 0xFA	; 250
    121e:	b4 e4       	ldi	r27, 0x44	; 68
    1220:	8d 83       	std	Y+5, r24	; 0x05
    1222:	9e 83       	std	Y+6, r25	; 0x06
    1224:	af 83       	std	Y+7, r26	; 0x07

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1226:	b8 87       	std	Y+8, r27	; 0x08
    1228:	20 e0       	ldi	r18, 0x00	; 0
    122a:	30 e0       	ldi	r19, 0x00	; 0
    122c:	4a e7       	ldi	r20, 0x7A	; 122
    122e:	53 e4       	ldi	r21, 0x43	; 67
    1230:	6d 81       	ldd	r22, Y+5	; 0x05
    1232:	7e 81       	ldd	r23, Y+6	; 0x06
    1234:	8f 81       	ldd	r24, Y+7	; 0x07
    1236:	98 85       	ldd	r25, Y+8	; 0x08
    1238:	c5 d1       	rcall	.+906    	; 0x15c4 <__mulsf3>
    123a:	dc 01       	movw	r26, r24
    123c:	cb 01       	movw	r24, r22
    123e:	89 87       	std	Y+9, r24	; 0x09
    1240:	9a 87       	std	Y+10, r25	; 0x0a
	if (__tmp < 1.0)
    1242:	ab 87       	std	Y+11, r26	; 0x0b
    1244:	bc 87       	std	Y+12, r27	; 0x0c
    1246:	20 e0       	ldi	r18, 0x00	; 0
    1248:	30 e0       	ldi	r19, 0x00	; 0
    124a:	40 e8       	ldi	r20, 0x80	; 128
    124c:	5f e3       	ldi	r21, 0x3F	; 63
    124e:	69 85       	ldd	r22, Y+9	; 0x09
    1250:	7a 85       	ldd	r23, Y+10	; 0x0a
    1252:	8b 85       	ldd	r24, Y+11	; 0x0b
    1254:	9c 85       	ldd	r25, Y+12	; 0x0c
    1256:	68 d0       	rcall	.+208    	; 0x1328 <__cmpsf2>
		__ticks = 1;
    1258:	88 23       	and	r24, r24
    125a:	2c f4       	brge	.+10     	; 0x1266 <BT_changePin+0x14c>
    125c:	81 e0       	ldi	r24, 0x01	; 1
    125e:	90 e0       	ldi	r25, 0x00	; 0
	else if (__tmp > 65535)
    1260:	9e 87       	std	Y+14, r25	; 0x0e
    1262:	8d 87       	std	Y+13, r24	; 0x0d
    1264:	3b c0       	rjmp	.+118    	; 0x12dc <BT_changePin+0x1c2>
    1266:	20 e0       	ldi	r18, 0x00	; 0
    1268:	3f ef       	ldi	r19, 0xFF	; 255
    126a:	4f e7       	ldi	r20, 0x7F	; 127
    126c:	57 e4       	ldi	r21, 0x47	; 71
    126e:	69 85       	ldd	r22, Y+9	; 0x09
    1270:	7a 85       	ldd	r23, Y+10	; 0x0a
    1272:	8b 85       	ldd	r24, Y+11	; 0x0b
    1274:	9c 85       	ldd	r25, Y+12	; 0x0c
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1276:	a2 d1       	rcall	.+836    	; 0x15bc <__gesf2>
    1278:	18 16       	cp	r1, r24
    127a:	3c f5       	brge	.+78     	; 0x12ca <BT_changePin+0x1b0>
    127c:	20 e0       	ldi	r18, 0x00	; 0
    127e:	30 e0       	ldi	r19, 0x00	; 0
    1280:	40 e2       	ldi	r20, 0x20	; 32
    1282:	51 e4       	ldi	r21, 0x41	; 65
    1284:	6d 81       	ldd	r22, Y+5	; 0x05
    1286:	7e 81       	ldd	r23, Y+6	; 0x06
    1288:	8f 81       	ldd	r24, Y+7	; 0x07
    128a:	98 85       	ldd	r25, Y+8	; 0x08
    128c:	9b d1       	rcall	.+822    	; 0x15c4 <__mulsf3>
    128e:	dc 01       	movw	r26, r24
    1290:	cb 01       	movw	r24, r22
    1292:	bc 01       	movw	r22, r24
    1294:	cd 01       	movw	r24, r26
    1296:	b4 d0       	rcall	.+360    	; 0x1400 <__fixunssfsi>
    1298:	dc 01       	movw	r26, r24
    129a:	cb 01       	movw	r24, r22
    129c:	9e 87       	std	Y+14, r25	; 0x0e
    129e:	8d 87       	std	Y+13, r24	; 0x0d
    12a0:	0f c0       	rjmp	.+30     	; 0x12c0 <BT_changePin+0x1a6>
    12a2:	89 e1       	ldi	r24, 0x19	; 25
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	98 8b       	std	Y+16, r25	; 0x10
    12a8:	8f 87       	std	Y+15, r24	; 0x0f
    12aa:	8f 85       	ldd	r24, Y+15	; 0x0f
    12ac:	98 89       	ldd	r25, Y+16	; 0x10
    12ae:	01 97       	sbiw	r24, 0x01	; 1
    12b0:	f1 f7       	brne	.-4      	; 0x12ae <BT_changePin+0x194>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12b2:	98 8b       	std	Y+16, r25	; 0x10
    12b4:	8f 87       	std	Y+15, r24	; 0x0f
    12b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    12b8:	9e 85       	ldd	r25, Y+14	; 0x0e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12ba:	01 97       	sbiw	r24, 0x01	; 1
    12bc:	9e 87       	std	Y+14, r25	; 0x0e
    12be:	8d 87       	std	Y+13, r24	; 0x0d
    12c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    12c2:	9e 85       	ldd	r25, Y+14	; 0x0e
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12c4:	89 2b       	or	r24, r25
    12c6:	69 f7       	brne	.-38     	; 0x12a2 <BT_changePin+0x188>
    12c8:	13 c0       	rjmp	.+38     	; 0x12f0 <BT_changePin+0x1d6>
    12ca:	69 85       	ldd	r22, Y+9	; 0x09
    12cc:	7a 85       	ldd	r23, Y+10	; 0x0a
    12ce:	8b 85       	ldd	r24, Y+11	; 0x0b
    12d0:	9c 85       	ldd	r25, Y+12	; 0x0c
    12d2:	96 d0       	rcall	.+300    	; 0x1400 <__fixunssfsi>
    12d4:	dc 01       	movw	r26, r24
    12d6:	cb 01       	movw	r24, r22
    12d8:	9e 87       	std	Y+14, r25	; 0x0e
    12da:	8d 87       	std	Y+13, r24	; 0x0d
    12dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    12de:	9e 85       	ldd	r25, Y+14	; 0x0e
    12e0:	9a 8b       	std	Y+18, r25	; 0x12
    12e2:	89 8b       	std	Y+17, r24	; 0x11
    12e4:	89 89       	ldd	r24, Y+17	; 0x11
    12e6:	9a 89       	ldd	r25, Y+18	; 0x12

	//give some time to dc
	_delay_ms(2000);
	
	USART_SendString("AT+PIN", 0, 0);
    12e8:	01 97       	sbiw	r24, 0x01	; 1
    12ea:	f1 f7       	brne	.-4      	; 0x12e8 <BT_changePin+0x1ce>
    12ec:	9a 8b       	std	Y+18, r25	; 0x12
    12ee:	89 8b       	std	Y+17, r24	; 0x11
    12f0:	40 e0       	ldi	r20, 0x00	; 0
    12f2:	60 e0       	ldi	r22, 0x00	; 0
	USART_SendString(pin, 0, 0);
    12f4:	86 e9       	ldi	r24, 0x96	; 150
    12f6:	91 e0       	ldi	r25, 0x01	; 1
    12f8:	1f d8       	rcall	.-4034   	; 0x338 <USART_SendString>
    12fa:	40 e0       	ldi	r20, 0x00	; 0
    12fc:	60 e0       	ldi	r22, 0x00	; 0
    12fe:	85 e2       	ldi	r24, 0x25	; 37
	USART_Send(0x0d, 0);
    1300:	91 e0       	ldi	r25, 0x01	; 1
    1302:	1a d8       	rcall	.-4044   	; 0x338 <USART_SendString>
    1304:	60 e0       	ldi	r22, 0x00	; 0
    1306:	8d e0       	ldi	r24, 0x0D	; 13
	USART_Send(0x0a, 0);
    1308:	0e 94 02 01 	call	0x204	; 0x204 <USART_Send>
    130c:	60 e0       	ldi	r22, 0x00	; 0
    130e:	8a e0       	ldi	r24, 0x0A	; 10


	//USART_SendString(reccStr, 2, 0);

    1310:	0e 94 02 01 	call	0x204	; 0x204 <USART_Send>
    1314:	00 00       	nop
    1316:	6e 96       	adiw	r28, 0x1e	; 30
    1318:	0f b6       	in	r0, 0x3f	; 63
    131a:	f8 94       	cli
    131c:	de bf       	out	0x3e, r29	; 62
    131e:	0f be       	out	0x3f, r0	; 63
    1320:	cd bf       	out	0x3d, r28	; 61
    1322:	df 91       	pop	r29
    1324:	cf 91       	pop	r28
    1326:	08 95       	ret

00001328 <__cmpsf2>:
    1328:	d4 d0       	rcall	.+424    	; 0x14d2 <__fp_cmp>
    132a:	08 f4       	brcc	.+2      	; 0x132e <__cmpsf2+0x6>
    132c:	81 e0       	ldi	r24, 0x01	; 1
    132e:	08 95       	ret

00001330 <__divsf3>:
    1330:	0c d0       	rcall	.+24     	; 0x134a <__divsf3x>
    1332:	0a c1       	rjmp	.+532    	; 0x1548 <__fp_round>
    1334:	02 d1       	rcall	.+516    	; 0x153a <__fp_pscB>
    1336:	40 f0       	brcs	.+16     	; 0x1348 <__divsf3+0x18>
    1338:	f9 d0       	rcall	.+498    	; 0x152c <__fp_pscA>
    133a:	30 f0       	brcs	.+12     	; 0x1348 <__divsf3+0x18>
    133c:	21 f4       	brne	.+8      	; 0x1346 <__divsf3+0x16>
    133e:	5f 3f       	cpi	r21, 0xFF	; 255
    1340:	19 f0       	breq	.+6      	; 0x1348 <__divsf3+0x18>
    1342:	eb c0       	rjmp	.+470    	; 0x151a <__fp_inf>
    1344:	51 11       	cpse	r21, r1
    1346:	34 c1       	rjmp	.+616    	; 0x15b0 <__fp_szero>
    1348:	ee c0       	rjmp	.+476    	; 0x1526 <__fp_nan>

0000134a <__divsf3x>:
    134a:	0f d1       	rcall	.+542    	; 0x156a <__fp_split3>
    134c:	98 f3       	brcs	.-26     	; 0x1334 <__divsf3+0x4>

0000134e <__divsf3_pse>:
    134e:	99 23       	and	r25, r25
    1350:	c9 f3       	breq	.-14     	; 0x1344 <__divsf3+0x14>
    1352:	55 23       	and	r21, r21
    1354:	b1 f3       	breq	.-20     	; 0x1342 <__divsf3+0x12>
    1356:	95 1b       	sub	r25, r21
    1358:	55 0b       	sbc	r21, r21
    135a:	bb 27       	eor	r27, r27
    135c:	aa 27       	eor	r26, r26
    135e:	62 17       	cp	r22, r18
    1360:	73 07       	cpc	r23, r19
    1362:	84 07       	cpc	r24, r20
    1364:	38 f0       	brcs	.+14     	; 0x1374 <__divsf3_pse+0x26>
    1366:	9f 5f       	subi	r25, 0xFF	; 255
    1368:	5f 4f       	sbci	r21, 0xFF	; 255
    136a:	22 0f       	add	r18, r18
    136c:	33 1f       	adc	r19, r19
    136e:	44 1f       	adc	r20, r20
    1370:	aa 1f       	adc	r26, r26
    1372:	a9 f3       	breq	.-22     	; 0x135e <__divsf3_pse+0x10>
    1374:	33 d0       	rcall	.+102    	; 0x13dc <__divsf3_pse+0x8e>
    1376:	0e 2e       	mov	r0, r30
    1378:	3a f0       	brmi	.+14     	; 0x1388 <__divsf3_pse+0x3a>
    137a:	e0 e8       	ldi	r30, 0x80	; 128
    137c:	30 d0       	rcall	.+96     	; 0x13de <__divsf3_pse+0x90>
    137e:	91 50       	subi	r25, 0x01	; 1
    1380:	50 40       	sbci	r21, 0x00	; 0
    1382:	e6 95       	lsr	r30
    1384:	00 1c       	adc	r0, r0
    1386:	ca f7       	brpl	.-14     	; 0x137a <__divsf3_pse+0x2c>
    1388:	29 d0       	rcall	.+82     	; 0x13dc <__divsf3_pse+0x8e>
    138a:	fe 2f       	mov	r31, r30
    138c:	27 d0       	rcall	.+78     	; 0x13dc <__divsf3_pse+0x8e>
    138e:	66 0f       	add	r22, r22
    1390:	77 1f       	adc	r23, r23
    1392:	88 1f       	adc	r24, r24
    1394:	bb 1f       	adc	r27, r27
    1396:	26 17       	cp	r18, r22
    1398:	37 07       	cpc	r19, r23
    139a:	48 07       	cpc	r20, r24
    139c:	ab 07       	cpc	r26, r27
    139e:	b0 e8       	ldi	r27, 0x80	; 128
    13a0:	09 f0       	breq	.+2      	; 0x13a4 <__divsf3_pse+0x56>
    13a2:	bb 0b       	sbc	r27, r27
    13a4:	80 2d       	mov	r24, r0
    13a6:	bf 01       	movw	r22, r30
    13a8:	ff 27       	eor	r31, r31
    13aa:	93 58       	subi	r25, 0x83	; 131
    13ac:	5f 4f       	sbci	r21, 0xFF	; 255
    13ae:	2a f0       	brmi	.+10     	; 0x13ba <__divsf3_pse+0x6c>
    13b0:	9e 3f       	cpi	r25, 0xFE	; 254
    13b2:	51 05       	cpc	r21, r1
    13b4:	68 f0       	brcs	.+26     	; 0x13d0 <__divsf3_pse+0x82>
    13b6:	b1 c0       	rjmp	.+354    	; 0x151a <__fp_inf>
    13b8:	fb c0       	rjmp	.+502    	; 0x15b0 <__fp_szero>
    13ba:	5f 3f       	cpi	r21, 0xFF	; 255
    13bc:	ec f3       	brlt	.-6      	; 0x13b8 <__divsf3_pse+0x6a>
    13be:	98 3e       	cpi	r25, 0xE8	; 232
    13c0:	dc f3       	brlt	.-10     	; 0x13b8 <__divsf3_pse+0x6a>
    13c2:	86 95       	lsr	r24
    13c4:	77 95       	ror	r23
    13c6:	67 95       	ror	r22
    13c8:	b7 95       	ror	r27
    13ca:	f7 95       	ror	r31
    13cc:	9f 5f       	subi	r25, 0xFF	; 255
    13ce:	c9 f7       	brne	.-14     	; 0x13c2 <__divsf3_pse+0x74>
    13d0:	88 0f       	add	r24, r24
    13d2:	91 1d       	adc	r25, r1
    13d4:	96 95       	lsr	r25
    13d6:	87 95       	ror	r24
    13d8:	97 f9       	bld	r25, 7
    13da:	08 95       	ret
    13dc:	e1 e0       	ldi	r30, 0x01	; 1
    13de:	66 0f       	add	r22, r22
    13e0:	77 1f       	adc	r23, r23
    13e2:	88 1f       	adc	r24, r24
    13e4:	bb 1f       	adc	r27, r27
    13e6:	62 17       	cp	r22, r18
    13e8:	73 07       	cpc	r23, r19
    13ea:	84 07       	cpc	r24, r20
    13ec:	ba 07       	cpc	r27, r26
    13ee:	20 f0       	brcs	.+8      	; 0x13f8 <__divsf3_pse+0xaa>
    13f0:	62 1b       	sub	r22, r18
    13f2:	73 0b       	sbc	r23, r19
    13f4:	84 0b       	sbc	r24, r20
    13f6:	ba 0b       	sbc	r27, r26
    13f8:	ee 1f       	adc	r30, r30
    13fa:	88 f7       	brcc	.-30     	; 0x13de <__divsf3_pse+0x90>
    13fc:	e0 95       	com	r30
    13fe:	08 95       	ret

00001400 <__fixunssfsi>:
    1400:	bc d0       	rcall	.+376    	; 0x157a <__fp_splitA>
    1402:	88 f0       	brcs	.+34     	; 0x1426 <__fixunssfsi+0x26>
    1404:	9f 57       	subi	r25, 0x7F	; 127
    1406:	90 f0       	brcs	.+36     	; 0x142c <__fixunssfsi+0x2c>
    1408:	b9 2f       	mov	r27, r25
    140a:	99 27       	eor	r25, r25
    140c:	b7 51       	subi	r27, 0x17	; 23
    140e:	a0 f0       	brcs	.+40     	; 0x1438 <__fixunssfsi+0x38>
    1410:	d1 f0       	breq	.+52     	; 0x1446 <__fixunssfsi+0x46>
    1412:	66 0f       	add	r22, r22
    1414:	77 1f       	adc	r23, r23
    1416:	88 1f       	adc	r24, r24
    1418:	99 1f       	adc	r25, r25
    141a:	1a f0       	brmi	.+6      	; 0x1422 <__fixunssfsi+0x22>
    141c:	ba 95       	dec	r27
    141e:	c9 f7       	brne	.-14     	; 0x1412 <__fixunssfsi+0x12>
    1420:	12 c0       	rjmp	.+36     	; 0x1446 <__fixunssfsi+0x46>
    1422:	b1 30       	cpi	r27, 0x01	; 1
    1424:	81 f0       	breq	.+32     	; 0x1446 <__fixunssfsi+0x46>
    1426:	c3 d0       	rcall	.+390    	; 0x15ae <__fp_zero>
    1428:	b1 e0       	ldi	r27, 0x01	; 1
    142a:	08 95       	ret
    142c:	c0 c0       	rjmp	.+384    	; 0x15ae <__fp_zero>
    142e:	67 2f       	mov	r22, r23
    1430:	78 2f       	mov	r23, r24
    1432:	88 27       	eor	r24, r24
    1434:	b8 5f       	subi	r27, 0xF8	; 248
    1436:	39 f0       	breq	.+14     	; 0x1446 <__fixunssfsi+0x46>
    1438:	b9 3f       	cpi	r27, 0xF9	; 249
    143a:	cc f3       	brlt	.-14     	; 0x142e <__fixunssfsi+0x2e>
    143c:	86 95       	lsr	r24
    143e:	77 95       	ror	r23
    1440:	67 95       	ror	r22
    1442:	b3 95       	inc	r27
    1444:	d9 f7       	brne	.-10     	; 0x143c <__fixunssfsi+0x3c>
    1446:	3e f4       	brtc	.+14     	; 0x1456 <__fixunssfsi+0x56>
    1448:	90 95       	com	r25
    144a:	80 95       	com	r24
    144c:	70 95       	com	r23
    144e:	61 95       	neg	r22
    1450:	7f 4f       	sbci	r23, 0xFF	; 255
    1452:	8f 4f       	sbci	r24, 0xFF	; 255
    1454:	9f 4f       	sbci	r25, 0xFF	; 255
    1456:	08 95       	ret

00001458 <__floatunsisf>:
    1458:	e8 94       	clt
    145a:	09 c0       	rjmp	.+18     	; 0x146e <__floatsisf+0x12>

0000145c <__floatsisf>:
    145c:	97 fb       	bst	r25, 7
    145e:	3e f4       	brtc	.+14     	; 0x146e <__floatsisf+0x12>
    1460:	90 95       	com	r25
    1462:	80 95       	com	r24
    1464:	70 95       	com	r23
    1466:	61 95       	neg	r22
    1468:	7f 4f       	sbci	r23, 0xFF	; 255
    146a:	8f 4f       	sbci	r24, 0xFF	; 255
    146c:	9f 4f       	sbci	r25, 0xFF	; 255
    146e:	99 23       	and	r25, r25
    1470:	a9 f0       	breq	.+42     	; 0x149c <__floatsisf+0x40>
    1472:	f9 2f       	mov	r31, r25
    1474:	96 e9       	ldi	r25, 0x96	; 150
    1476:	bb 27       	eor	r27, r27
    1478:	93 95       	inc	r25
    147a:	f6 95       	lsr	r31
    147c:	87 95       	ror	r24
    147e:	77 95       	ror	r23
    1480:	67 95       	ror	r22
    1482:	b7 95       	ror	r27
    1484:	f1 11       	cpse	r31, r1
    1486:	f8 cf       	rjmp	.-16     	; 0x1478 <__floatsisf+0x1c>
    1488:	fa f4       	brpl	.+62     	; 0x14c8 <__floatsisf+0x6c>
    148a:	bb 0f       	add	r27, r27
    148c:	11 f4       	brne	.+4      	; 0x1492 <__floatsisf+0x36>
    148e:	60 ff       	sbrs	r22, 0
    1490:	1b c0       	rjmp	.+54     	; 0x14c8 <__floatsisf+0x6c>
    1492:	6f 5f       	subi	r22, 0xFF	; 255
    1494:	7f 4f       	sbci	r23, 0xFF	; 255
    1496:	8f 4f       	sbci	r24, 0xFF	; 255
    1498:	9f 4f       	sbci	r25, 0xFF	; 255
    149a:	16 c0       	rjmp	.+44     	; 0x14c8 <__floatsisf+0x6c>
    149c:	88 23       	and	r24, r24
    149e:	11 f0       	breq	.+4      	; 0x14a4 <__floatsisf+0x48>
    14a0:	96 e9       	ldi	r25, 0x96	; 150
    14a2:	11 c0       	rjmp	.+34     	; 0x14c6 <__floatsisf+0x6a>
    14a4:	77 23       	and	r23, r23
    14a6:	21 f0       	breq	.+8      	; 0x14b0 <__floatsisf+0x54>
    14a8:	9e e8       	ldi	r25, 0x8E	; 142
    14aa:	87 2f       	mov	r24, r23
    14ac:	76 2f       	mov	r23, r22
    14ae:	05 c0       	rjmp	.+10     	; 0x14ba <__floatsisf+0x5e>
    14b0:	66 23       	and	r22, r22
    14b2:	71 f0       	breq	.+28     	; 0x14d0 <__floatsisf+0x74>
    14b4:	96 e8       	ldi	r25, 0x86	; 134
    14b6:	86 2f       	mov	r24, r22
    14b8:	70 e0       	ldi	r23, 0x00	; 0
    14ba:	60 e0       	ldi	r22, 0x00	; 0
    14bc:	2a f0       	brmi	.+10     	; 0x14c8 <__floatsisf+0x6c>
    14be:	9a 95       	dec	r25
    14c0:	66 0f       	add	r22, r22
    14c2:	77 1f       	adc	r23, r23
    14c4:	88 1f       	adc	r24, r24
    14c6:	da f7       	brpl	.-10     	; 0x14be <__floatsisf+0x62>
    14c8:	88 0f       	add	r24, r24
    14ca:	96 95       	lsr	r25
    14cc:	87 95       	ror	r24
    14ce:	97 f9       	bld	r25, 7
    14d0:	08 95       	ret

000014d2 <__fp_cmp>:
    14d2:	99 0f       	add	r25, r25
    14d4:	00 08       	sbc	r0, r0
    14d6:	55 0f       	add	r21, r21
    14d8:	aa 0b       	sbc	r26, r26
    14da:	e0 e8       	ldi	r30, 0x80	; 128
    14dc:	fe ef       	ldi	r31, 0xFE	; 254
    14de:	16 16       	cp	r1, r22
    14e0:	17 06       	cpc	r1, r23
    14e2:	e8 07       	cpc	r30, r24
    14e4:	f9 07       	cpc	r31, r25
    14e6:	c0 f0       	brcs	.+48     	; 0x1518 <__fp_cmp+0x46>
    14e8:	12 16       	cp	r1, r18
    14ea:	13 06       	cpc	r1, r19
    14ec:	e4 07       	cpc	r30, r20
    14ee:	f5 07       	cpc	r31, r21
    14f0:	98 f0       	brcs	.+38     	; 0x1518 <__fp_cmp+0x46>
    14f2:	62 1b       	sub	r22, r18
    14f4:	73 0b       	sbc	r23, r19
    14f6:	84 0b       	sbc	r24, r20
    14f8:	95 0b       	sbc	r25, r21
    14fa:	39 f4       	brne	.+14     	; 0x150a <__fp_cmp+0x38>
    14fc:	0a 26       	eor	r0, r26
    14fe:	61 f0       	breq	.+24     	; 0x1518 <__fp_cmp+0x46>
    1500:	23 2b       	or	r18, r19
    1502:	24 2b       	or	r18, r20
    1504:	25 2b       	or	r18, r21
    1506:	21 f4       	brne	.+8      	; 0x1510 <__fp_cmp+0x3e>
    1508:	08 95       	ret
    150a:	0a 26       	eor	r0, r26
    150c:	09 f4       	brne	.+2      	; 0x1510 <__fp_cmp+0x3e>
    150e:	a1 40       	sbci	r26, 0x01	; 1
    1510:	a6 95       	lsr	r26
    1512:	8f ef       	ldi	r24, 0xFF	; 255
    1514:	81 1d       	adc	r24, r1
    1516:	81 1d       	adc	r24, r1
    1518:	08 95       	ret

0000151a <__fp_inf>:
    151a:	97 f9       	bld	r25, 7
    151c:	9f 67       	ori	r25, 0x7F	; 127
    151e:	80 e8       	ldi	r24, 0x80	; 128
    1520:	70 e0       	ldi	r23, 0x00	; 0
    1522:	60 e0       	ldi	r22, 0x00	; 0
    1524:	08 95       	ret

00001526 <__fp_nan>:
    1526:	9f ef       	ldi	r25, 0xFF	; 255
    1528:	80 ec       	ldi	r24, 0xC0	; 192
    152a:	08 95       	ret

0000152c <__fp_pscA>:
    152c:	00 24       	eor	r0, r0
    152e:	0a 94       	dec	r0
    1530:	16 16       	cp	r1, r22
    1532:	17 06       	cpc	r1, r23
    1534:	18 06       	cpc	r1, r24
    1536:	09 06       	cpc	r0, r25
    1538:	08 95       	ret

0000153a <__fp_pscB>:
    153a:	00 24       	eor	r0, r0
    153c:	0a 94       	dec	r0
    153e:	12 16       	cp	r1, r18
    1540:	13 06       	cpc	r1, r19
    1542:	14 06       	cpc	r1, r20
    1544:	05 06       	cpc	r0, r21
    1546:	08 95       	ret

00001548 <__fp_round>:
    1548:	09 2e       	mov	r0, r25
    154a:	03 94       	inc	r0
    154c:	00 0c       	add	r0, r0
    154e:	11 f4       	brne	.+4      	; 0x1554 <__fp_round+0xc>
    1550:	88 23       	and	r24, r24
    1552:	52 f0       	brmi	.+20     	; 0x1568 <__fp_round+0x20>
    1554:	bb 0f       	add	r27, r27
    1556:	40 f4       	brcc	.+16     	; 0x1568 <__fp_round+0x20>
    1558:	bf 2b       	or	r27, r31
    155a:	11 f4       	brne	.+4      	; 0x1560 <__fp_round+0x18>
    155c:	60 ff       	sbrs	r22, 0
    155e:	04 c0       	rjmp	.+8      	; 0x1568 <__fp_round+0x20>
    1560:	6f 5f       	subi	r22, 0xFF	; 255
    1562:	7f 4f       	sbci	r23, 0xFF	; 255
    1564:	8f 4f       	sbci	r24, 0xFF	; 255
    1566:	9f 4f       	sbci	r25, 0xFF	; 255
    1568:	08 95       	ret

0000156a <__fp_split3>:
    156a:	57 fd       	sbrc	r21, 7
    156c:	90 58       	subi	r25, 0x80	; 128
    156e:	44 0f       	add	r20, r20
    1570:	55 1f       	adc	r21, r21
    1572:	59 f0       	breq	.+22     	; 0x158a <__fp_splitA+0x10>
    1574:	5f 3f       	cpi	r21, 0xFF	; 255
    1576:	71 f0       	breq	.+28     	; 0x1594 <__fp_splitA+0x1a>
    1578:	47 95       	ror	r20

0000157a <__fp_splitA>:
    157a:	88 0f       	add	r24, r24
    157c:	97 fb       	bst	r25, 7
    157e:	99 1f       	adc	r25, r25
    1580:	61 f0       	breq	.+24     	; 0x159a <__fp_splitA+0x20>
    1582:	9f 3f       	cpi	r25, 0xFF	; 255
    1584:	79 f0       	breq	.+30     	; 0x15a4 <__fp_splitA+0x2a>
    1586:	87 95       	ror	r24
    1588:	08 95       	ret
    158a:	12 16       	cp	r1, r18
    158c:	13 06       	cpc	r1, r19
    158e:	14 06       	cpc	r1, r20
    1590:	55 1f       	adc	r21, r21
    1592:	f2 cf       	rjmp	.-28     	; 0x1578 <__fp_split3+0xe>
    1594:	46 95       	lsr	r20
    1596:	f1 df       	rcall	.-30     	; 0x157a <__fp_splitA>
    1598:	08 c0       	rjmp	.+16     	; 0x15aa <__fp_splitA+0x30>
    159a:	16 16       	cp	r1, r22
    159c:	17 06       	cpc	r1, r23
    159e:	18 06       	cpc	r1, r24
    15a0:	99 1f       	adc	r25, r25
    15a2:	f1 cf       	rjmp	.-30     	; 0x1586 <__fp_splitA+0xc>
    15a4:	86 95       	lsr	r24
    15a6:	71 05       	cpc	r23, r1
    15a8:	61 05       	cpc	r22, r1
    15aa:	08 94       	sec
    15ac:	08 95       	ret

000015ae <__fp_zero>:
    15ae:	e8 94       	clt

000015b0 <__fp_szero>:
    15b0:	bb 27       	eor	r27, r27
    15b2:	66 27       	eor	r22, r22
    15b4:	77 27       	eor	r23, r23
    15b6:	cb 01       	movw	r24, r22
    15b8:	97 f9       	bld	r25, 7
    15ba:	08 95       	ret

000015bc <__gesf2>:
    15bc:	8a df       	rcall	.-236    	; 0x14d2 <__fp_cmp>
    15be:	08 f4       	brcc	.+2      	; 0x15c2 <__gesf2+0x6>
    15c0:	8f ef       	ldi	r24, 0xFF	; 255
    15c2:	08 95       	ret

000015c4 <__mulsf3>:
    15c4:	0b d0       	rcall	.+22     	; 0x15dc <__mulsf3x>
    15c6:	c0 cf       	rjmp	.-128    	; 0x1548 <__fp_round>
    15c8:	b1 df       	rcall	.-158    	; 0x152c <__fp_pscA>
    15ca:	28 f0       	brcs	.+10     	; 0x15d6 <__mulsf3+0x12>
    15cc:	b6 df       	rcall	.-148    	; 0x153a <__fp_pscB>
    15ce:	18 f0       	brcs	.+6      	; 0x15d6 <__mulsf3+0x12>
    15d0:	95 23       	and	r25, r21
    15d2:	09 f0       	breq	.+2      	; 0x15d6 <__mulsf3+0x12>
    15d4:	a2 cf       	rjmp	.-188    	; 0x151a <__fp_inf>
    15d6:	a7 cf       	rjmp	.-178    	; 0x1526 <__fp_nan>
    15d8:	11 24       	eor	r1, r1
    15da:	ea cf       	rjmp	.-44     	; 0x15b0 <__fp_szero>

000015dc <__mulsf3x>:
    15dc:	c6 df       	rcall	.-116    	; 0x156a <__fp_split3>
    15de:	a0 f3       	brcs	.-24     	; 0x15c8 <__mulsf3+0x4>

000015e0 <__mulsf3_pse>:
    15e0:	95 9f       	mul	r25, r21
    15e2:	d1 f3       	breq	.-12     	; 0x15d8 <__mulsf3+0x14>
    15e4:	95 0f       	add	r25, r21
    15e6:	50 e0       	ldi	r21, 0x00	; 0
    15e8:	55 1f       	adc	r21, r21
    15ea:	62 9f       	mul	r22, r18
    15ec:	f0 01       	movw	r30, r0
    15ee:	72 9f       	mul	r23, r18
    15f0:	bb 27       	eor	r27, r27
    15f2:	f0 0d       	add	r31, r0
    15f4:	b1 1d       	adc	r27, r1
    15f6:	63 9f       	mul	r22, r19
    15f8:	aa 27       	eor	r26, r26
    15fa:	f0 0d       	add	r31, r0
    15fc:	b1 1d       	adc	r27, r1
    15fe:	aa 1f       	adc	r26, r26
    1600:	64 9f       	mul	r22, r20
    1602:	66 27       	eor	r22, r22
    1604:	b0 0d       	add	r27, r0
    1606:	a1 1d       	adc	r26, r1
    1608:	66 1f       	adc	r22, r22
    160a:	82 9f       	mul	r24, r18
    160c:	22 27       	eor	r18, r18
    160e:	b0 0d       	add	r27, r0
    1610:	a1 1d       	adc	r26, r1
    1612:	62 1f       	adc	r22, r18
    1614:	73 9f       	mul	r23, r19
    1616:	b0 0d       	add	r27, r0
    1618:	a1 1d       	adc	r26, r1
    161a:	62 1f       	adc	r22, r18
    161c:	83 9f       	mul	r24, r19
    161e:	a0 0d       	add	r26, r0
    1620:	61 1d       	adc	r22, r1
    1622:	22 1f       	adc	r18, r18
    1624:	74 9f       	mul	r23, r20
    1626:	33 27       	eor	r19, r19
    1628:	a0 0d       	add	r26, r0
    162a:	61 1d       	adc	r22, r1
    162c:	23 1f       	adc	r18, r19
    162e:	84 9f       	mul	r24, r20
    1630:	60 0d       	add	r22, r0
    1632:	21 1d       	adc	r18, r1
    1634:	82 2f       	mov	r24, r18
    1636:	76 2f       	mov	r23, r22
    1638:	6a 2f       	mov	r22, r26
    163a:	11 24       	eor	r1, r1
    163c:	9f 57       	subi	r25, 0x7F	; 127
    163e:	50 40       	sbci	r21, 0x00	; 0
    1640:	8a f0       	brmi	.+34     	; 0x1664 <__mulsf3_pse+0x84>
    1642:	e1 f0       	breq	.+56     	; 0x167c <__mulsf3_pse+0x9c>
    1644:	88 23       	and	r24, r24
    1646:	4a f0       	brmi	.+18     	; 0x165a <__mulsf3_pse+0x7a>
    1648:	ee 0f       	add	r30, r30
    164a:	ff 1f       	adc	r31, r31
    164c:	bb 1f       	adc	r27, r27
    164e:	66 1f       	adc	r22, r22
    1650:	77 1f       	adc	r23, r23
    1652:	88 1f       	adc	r24, r24
    1654:	91 50       	subi	r25, 0x01	; 1
    1656:	50 40       	sbci	r21, 0x00	; 0
    1658:	a9 f7       	brne	.-22     	; 0x1644 <__mulsf3_pse+0x64>
    165a:	9e 3f       	cpi	r25, 0xFE	; 254
    165c:	51 05       	cpc	r21, r1
    165e:	70 f0       	brcs	.+28     	; 0x167c <__mulsf3_pse+0x9c>
    1660:	5c cf       	rjmp	.-328    	; 0x151a <__fp_inf>
    1662:	a6 cf       	rjmp	.-180    	; 0x15b0 <__fp_szero>
    1664:	5f 3f       	cpi	r21, 0xFF	; 255
    1666:	ec f3       	brlt	.-6      	; 0x1662 <__mulsf3_pse+0x82>
    1668:	98 3e       	cpi	r25, 0xE8	; 232
    166a:	dc f3       	brlt	.-10     	; 0x1662 <__mulsf3_pse+0x82>
    166c:	86 95       	lsr	r24
    166e:	77 95       	ror	r23
    1670:	67 95       	ror	r22
    1672:	b7 95       	ror	r27
    1674:	f7 95       	ror	r31
    1676:	e7 95       	ror	r30
    1678:	9f 5f       	subi	r25, 0xFF	; 255
    167a:	c1 f7       	brne	.-16     	; 0x166c <__mulsf3_pse+0x8c>
    167c:	fe 2b       	or	r31, r30
    167e:	88 0f       	add	r24, r24
    1680:	91 1d       	adc	r25, r1
    1682:	96 95       	lsr	r25
    1684:	87 95       	ror	r24
    1686:	97 f9       	bld	r25, 7
    1688:	08 95       	ret

0000168a <__udivmodsi4>:
    168a:	a1 e2       	ldi	r26, 0x21	; 33
    168c:	1a 2e       	mov	r1, r26
    168e:	aa 1b       	sub	r26, r26
    1690:	bb 1b       	sub	r27, r27
    1692:	fd 01       	movw	r30, r26
    1694:	0d c0       	rjmp	.+26     	; 0x16b0 <__udivmodsi4_ep>

00001696 <__udivmodsi4_loop>:
    1696:	aa 1f       	adc	r26, r26
    1698:	bb 1f       	adc	r27, r27
    169a:	ee 1f       	adc	r30, r30
    169c:	ff 1f       	adc	r31, r31
    169e:	a2 17       	cp	r26, r18
    16a0:	b3 07       	cpc	r27, r19
    16a2:	e4 07       	cpc	r30, r20
    16a4:	f5 07       	cpc	r31, r21
    16a6:	20 f0       	brcs	.+8      	; 0x16b0 <__udivmodsi4_ep>
    16a8:	a2 1b       	sub	r26, r18
    16aa:	b3 0b       	sbc	r27, r19
    16ac:	e4 0b       	sbc	r30, r20
    16ae:	f5 0b       	sbc	r31, r21

000016b0 <__udivmodsi4_ep>:
    16b0:	66 1f       	adc	r22, r22
    16b2:	77 1f       	adc	r23, r23
    16b4:	88 1f       	adc	r24, r24
    16b6:	99 1f       	adc	r25, r25
    16b8:	1a 94       	dec	r1
    16ba:	69 f7       	brne	.-38     	; 0x1696 <__udivmodsi4_loop>
    16bc:	60 95       	com	r22
    16be:	70 95       	com	r23
    16c0:	80 95       	com	r24
    16c2:	90 95       	com	r25
    16c4:	9b 01       	movw	r18, r22
    16c6:	ac 01       	movw	r20, r24
    16c8:	bd 01       	movw	r22, r26
    16ca:	cf 01       	movw	r24, r30
    16cc:	08 95       	ret

000016ce <strlen>:
    16ce:	fc 01       	movw	r30, r24
    16d0:	01 90       	ld	r0, Z+
    16d2:	00 20       	and	r0, r0
    16d4:	e9 f7       	brne	.-6      	; 0x16d0 <strlen+0x2>
    16d6:	80 95       	com	r24
    16d8:	90 95       	com	r25
    16da:	8e 0f       	add	r24, r30
    16dc:	9f 1f       	adc	r25, r31
    16de:	08 95       	ret

000016e0 <_exit>:
    16e0:	f8 94       	cli

000016e2 <__stop_program>:
    16e2:	ff cf       	rjmp	.-2      	; 0x16e2 <__stop_program>
